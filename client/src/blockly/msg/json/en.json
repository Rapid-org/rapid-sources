{
	"@metadata": {
		"author": "Ellen Spertus <ellen.spertus@gmail.com>",
		"lastupdated": "2022-10-14 07:36:07.563997",
		"locale": "en",
		"messagedocumentation" : "qqq"
	},
	"VARIABLES_DEFAULT_NAME": "item",
	"TODAY": "Today",
	"DUPLICATE_BLOCK": "Duplicate",
	"ADD_COMMENT": "Add Comment",
	"REMOVE_COMMENT": "Remove Comment",
	"EXTERNAL_INPUTS": "External Inputs",
	"INLINE_INPUTS": "Inline Inputs",
	"DELETE_BLOCK": "Delete Block",
	"DELETE_X_BLOCKS": "Delete %1 Blocks",
	"CLEAN_UP": "Clean up Blocks",
	"COLLAPSE_BLOCK": "Collapse Block",
	"COLLAPSE_ALL": "Collapse Blocks",
	"EXPAND_BLOCK": "Expand Block",
	"EXPAND_ALL": "Expand Blocks",
	"DISABLE_BLOCK": "Disable Block",
	"ENABLE_BLOCK": "Enable Block",
	"HELP": "Help",
	"CHAT": "Chat with your collaborator by typing in this box!",
	"AUTH": "Please authorize this app to enable your work to be saved and to allow it to be shared by you.",
	"ME": "Me",
	"CHANGE_VALUE_TITLE": "Change value:",
	"NEW_VARIABLE": "New variable...",
	"NEW_VARIABLE_TITLE": "New variable name:",
	"RENAME_VARIABLE": "Rename variable...",
	"RENAME_VARIABLE_TITLE": "Rename all '%1' variables to:",
	"NEW_SCOPE_VARIABLE": "New Key...",
	"NEW_SCOPE_VARIABLE_TITLE": "New Key name:",
	"RENAME_SCOPE_VARIABLE": "Rename Key...",
	"RENAME_SCOPE_VARIABLE_TITLE": "Rename all '%1' Keys to:",
	"COLOUR_PICKER_HELPURL": "https://en.wikipedia.org/wiki/Color",
	"COLOUR_PICKER_TOOLTIP": "Choose a colour from the palette.",
	"COLOUR_PICKER_TYPEBLOCK": "Choose Colour",
	"COLOUR_RANDOM_HELPURL": "http://randomcolour.com",
	"COLOUR_RANDOM_TITLE": "random colour",
	"COLOUR_RANDOM_TOOLTIP": "Choose a colour at random.",
	"COLOUR_RANDOM_TYPEBLOCK": "Random Colour",
	"COLOUR_RGB_HELPURL": "http://www.december.com/html/spec/colorper.html",
	"COLOUR_RGB_TITLE": "colour with",
	"COLOUR_RGB_RED": "red",
	"COLOUR_RGB_GREEN": "green",
	"COLOUR_RGB_BLUE": "blue",
	"COLOUR_RGB_TOOLTIP": "Create a colour with the specified amount of red, green, and blue. All values must be between 0 and 100.",
	"COLOUR_RGB_TYPEBLOCK": "Colour with",
	"COLOUR_BLEND_HELPURL": "http://meyerweb.com/eric/tools/color-blend/",
	"COLOUR_BLEND_TITLE": "blend",
	"COLOUR_BLEND_COLOUR1": "colour 1",
	"COLOUR_BLEND_COLOUR2": "colour 2",
	"COLOUR_BLEND_RATIO": "ratio",
	"COLOUR_BLEND_TOOLTIP": "Blends two colours together with a given ratio (0.0 - 1.0).",
	"COLOUR_BLEND_TYPEBLOCK": "Blend Colour",
	"CONTROLS_REPEAT_HELPURL": "https://en.wikipedia.org/wiki/For_loop",
	"CONTROLS_REPEAT_TITLE": "repeat %1 times",
	"CONTROLS_REPEAT_TITLE_REPEAT": "repeat",
	"CONTROLS_REPEAT_TITLE_TIMES": "times",
	"CONTROLS_REPEAT_INPUT_DO": "do",
	"CONTROLS_REPEAT_TOOLTIP": "Do some statements several times.",
	"CONTROLS_REPEAT_TYPEBLOCK": "Repeat Times",
	"CONTROLS_WHILEUNTIL_HELPURL": "https://github.com/google/blockly/wiki/Loops#repeat",
	"CONTROLS_WHILEUNTIL_OPERATOR_WHILE": "repeat while",
	"CONTROLS_WHILEUNTIL_OPERATOR_UNTIL": "repeat until",
	"CONTROLS_WHILEUNTIL_TOOLTIP_WHILE": "While a value is true, then do some statements.",
	"CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL": "While a value is false, then do some statements.",
	"CONTROLS_WHILEUNTIL_WHILE_TYPEBLOCK": "Repeat While",
	"CONTROLS_WHILEUNTIL_UNTIL_TYPEBLOCK": "Repeat Unitl",
	"CONTROLS_FOR_HELPURL": "https://github.com/google/blockly/wiki/Loops#count-with",
	"CONTROLS_FOR_TOOLTIP": "Have the variable '%1' take on the values from the start number to the end number, counting by the specified interval, and do the specified blocks.",
	"CONTROLS_FOR_TITLE": "count with %1 from %2 to %3 by %4",
	"CONTROLS_FOR_TYPEBLOCK": "Count With From To By",
	"CONTROLS_FOREACH_HELPURL": "https://github.com/google/blockly/wiki/Loops#for-each",
	"CONTROLS_FOREACH_TITLE": "for each item %1 in list %2",
	"CONTROLS_FOREACH_TOOLTIP": "For each item in a list, set the variable '%1' to the item, and then do some statements.",
	"CONTROLS_FOREACH_TYPEBLOCK": "For Each Item In List",
	"CONTROLS_FOREACH_KEY_HELPURL": "https://github.com/google/blockly/wiki/Loops#for-each",
	"CONTROLS_FOREACH_KEY_TITLE": "for each key %1 in map %2",
	"CONTROLS_FOREACH_KEY_TYPEBLOCK": "For Each Key In Map",
	"CONTROLS_FLOW_STATEMENTS_HELPURL": "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks",
	"CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK": "break out of loop",
	"CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE": "continue with next iteration of loop",
	"CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK": "Break out of the containing loop.",
	"CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE": "Skip the rest of this loop, and continue with the next iteration.",
	"CONTROLS_FLOW_STATEMENTS_WARNING": "Warning: This block may only be used within a loop.",
	"CONTROLS_FLOW_STATEMENTS_BREAK_TYPEBLOCK": "Break Loop",
	"CONTROLS_FLOW_STATEMENTS_CONTINUE_TYPEBLOCK": "Continue Loop",
	"CONTROLS_IF_HELPURL": "https://github.com/google/blockly/wiki/IfElse",
	"CONTROLS_IF_TOOLTIP_1": "If a value is true, then do some statements.",
	"CONTROLS_IF_TOOLTIP_2": "If a value is true, then do the first block of statements. Otherwise, do the second block of statements.",
	"CONTROLS_IF_TOOLTIP_3": "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements.",
	"CONTROLS_IF_TOOLTIP_4": "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements. If none of the values are true, do the last block of statements.",
	"CONTROLS_IF_MSG_IF": "if",
	"CONTROLS_IF_MSG_ELSEIF": "else if",
	"CONTROLS_IF_MSG_ELSE": "else",
	"CONTROLS_IF_IF_TOOLTIP": "Add, remove, or reorder sections to reconfigure this if block.",
	"CONTROLS_IF_ELSEIF_TOOLTIP": "Add a condition to the if block.",
	"CONTROLS_IF_ELSE_TOOLTIP": "Add a final, catch-all condition to the if block.",
	"CONTROLS_IF_TYPEBLOCK": "If",
	"CONTROLS_IF_ELSIF_TYPEBLOCK": "If Else If",
	"CONTROLS_IF_ELSIF_ELSE_TYPEBLOCK": "If Else If Else",
	"CONTROLS_IF_ELSE_TYPEBLOCK": "If Else",
	"LOGIC_COMPARE_HELPURL": "https://en.wikipedia.org/wiki/Inequality_(mathematics)",
	"LOGIC_COMPARE_TOOLTIP_EQ": "Return true if both inputs equal each other.",
	"LOGIC_COMPARE_TOOLTIP_NEQ": "Return true if both inputs are not equal to each other.",
	"LOGIC_COMPARE_TOOLTIP_LT": "Return true if the first input is smaller than the second input.",
	"LOGIC_COMPARE_TOOLTIP_LTE": "Return true if the first input is smaller than or equal to the second input.",
	"LOGIC_COMPARE_TOOLTIP_GT": "Return true if the first input is greater than the second input.",
	"LOGIC_COMPARE_TOOLTIP_GTE": "Return true if the first input is greater than or equal to the second input.",
	"LOGIC_COMPARE_TYPEBLOCK": "Logic Equal",
	"LOGIC_OPERATION_HELPURL": "https://github.com/google/blockly/wiki/Logic#logical-operations",
	"LOGIC_OPERATION_TOOLTIP_AND": "Return true if both inputs are true.",
	"LOGIC_OPERATION_AND": "and",
	"LOGIC_OPERATION_TOOLTIP_OR": "Return true if at least one of the inputs is true.",
	"LOGIC_OPERATION_OR": "or",
	"LOGIC_OPERATION_OR_TYPEBLOCK": "or",
	"LOGIC_OPERATION_AND_TYPEBLOCK": "and",
	"LOGIC_NEGATE_HELPURL": "https://github.com/google/blockly/wiki/Logic#not",
	"LOGIC_NEGATE_TITLE": "not %1",
	"LOGIC_NEGATE_TOOLTIP": "Returns true if the input is false. Returns false if the input is true.",
	"LOGIC_NEGATE_TYPEBLOCK": "not",
	"LOGIC_BOOLEAN_HELPURL": "https://github.com/google/blockly/wiki/Logic#values",
	"LOGIC_BOOLEAN_TRUE": "true",
	"LOGIC_BOOLEAN_FALSE": "false",
	"LOGIC_BOOLEAN_TOOLTIP": "Returns either true or false.",
	"LOGIC_BOOLEAN_TRUE_TYPEBLOCK": "True",
	"LOGIC_BOOLEAN_FALSE_TYPEBLOCK": "False",
	"LOGIC_NULL_HELPURL": "https://en.wikipedia.org/wiki/Nullable_type",
	"LOGIC_NULL": "null",
	"LOGIC_NULL_TOOLTIP": "Returns null.",
	"LOGIC_NULL_TYPEBLOCK": "Null",
	"LOGIC_THIS_TYPEBLOCK": "This",
	"LOGIC_TERNARY_HELPURL": "https://en.wikipedia.org/wiki/%3F:",
	"LOGIC_TERNARY_CONDITION": "test",
	"LOGIC_TERNARY_IF_TRUE": "if true",
	"LOGIC_TERNARY_IF_FALSE": "if false",
	"LOGIC_TERNARY_TOOLTIP": "Check the condition in 'test'. If the condition is true, returns the 'if true' value; otherwise returns the 'if false' value.",
	"LOGIC_TERNARY_TYPEBLOCK": "Test",
	"MATH_NUMBER_HELPURL": "https://en.wikipedia.org/wiki/Number",
	"MATH_NUMBER_TOOLTIP": "A number.",
	"MATH_ADDITION_SYMBOL": "+",
	"MATH_SUBTRACTION_SYMBOL": "-",
	"MATH_DIVISION_SYMBOL": "รท",
	"MATH_MULTIPLICATION_SYMBOL": "ร",
	"MATH_POWER_SYMBOL": "^",
	"MATH_TRIG_SIN": "sin",
	"MATH_TRIG_COS": "cos",
	"MATH_TRIG_TAN": "tan",
	"MATH_TRIG_ASIN": "asin",
	"MATH_TRIG_ACOS": "acos",
	"MATH_TRIG_ATAN": "atan",
	"MATH_ARITHMETIC_HELPURL": "https://en.wikipedia.org/wiki/Arithmetic",
	"MATH_ARITHMETIC_TOOLTIP_ADD": "Return the sum of the two numbers.",
	"MATH_ARITHMETIC_TOOLTIP_MINUS": "Return the difference of the two numbers.",
	"MATH_ARITHMETIC_TOOLTIP_MULTIPLY": "Return the product of the two numbers.",
	"MATH_ARITHMETIC_TOOLTIP_DIVIDE": "Return the quotient of the two numbers.",
	"MATH_ARITHMETIC_TOOLTIP_POWER": "Return the first number raised to the power of the second number.",
	"MATH_ARITHMETIC_ADD_TYPEBLOCK": "+",
	"MATH_ARITHMETIC_MINUS_TYPEBLOCK": "-",
	"MATH_ARITHMETIC_MULTIPLY_TYPEBLOCK": "*",
	"MATH_ARITHMETIC_DIVIDE_TYPEBLOCK": "/",
	"MATH_ARITHMETIC_POWER_TYPEBLOCK": "^",
	"MATH_SINGLE_HELPURL": "https://en.wikipedia.org/wiki/Square_root",
	"MATH_SINGLE_OP_ROOT": "square root",
	"MATH_SINGLE_TOOLTIP_ROOT": "Return the square root of a number.",
	"MATH_SINGLE_OP_ABSOLUTE": "absolute",
	"MATH_SINGLE_TOOLTIP_ABS": "Return the absolute value of a number.",
	"MATH_SINGLE_OP_ROOT_TYPEBLOCK": "Square Root",
	"MATH_SINGLE_OP_ABSOLUTE_TYPEBLOCK": "Absolute Value",
	"MATH_SINGLE_OP_NEG_TYPEBLOCK": "Negation",
	"MATH_SINGLE_TOOLTIP_NEG": "Return the negation of a number.",
	"MATH_SINGLE_TOOLTIP_LN": "Return the natural logarithm of a number.",
	"MATH_SINGLE_TOOLTIP_LOG10": "Return the base 10 logarithm of a number.",
	"MATH_SINGLE_TOOLTIP_EXP": "Return e to the power of a number.",
	"MATH_SINGLE_TOOLTIP_POW10": "Return 10 to the power of a number.",
	"MATH_TRIG_HELPURL": "https://en.wikipedia.org/wiki/Trigonometric_functions",
	"MATH_TRIG_TOOLTIP_SIN": "Return the sine of a degree (not radian).",
	"MATH_TRIG_TOOLTIP_COS": "Return the cosine of a degree (not radian).",
	"MATH_TRIG_TOOLTIP_TAN": "Return the tangent of a degree (not radian).",
	"MATH_TRIG_TOOLTIP_ASIN": "Return the arcsine of a number.",
	"MATH_TRIG_TOOLTIP_ACOS": "Return the arccosine of a number.",
	"MATH_TRIG_TOOLTIP_ATAN": "Return the arctangent of a number.",
	"MATH_TRIG_SIN_TYPEBLOCK": "SIN",
	"MATH_TRIG_COS_TYPEBLOCK": "COS",
	"MATH_TRIG_TAN_TYPEBLOCK": "TAN",
	"MATH_TRIG_ASIN_TYPEBLOCK": "ASIN",
	"MATH_TRIG_ACOS_TYPEBLOCK": "ACOS",
	"MATH_TRIG_ATAN_TYPEBLOCK": "ATAN",
	"MATH_CONSTANT_HELPURL": "https://en.wikipedia.org/wiki/Mathematical_constant",
	"MATH_CONSTANT_TOOLTIP": "Return one of the common constants: ฯ (3.141โฆ), e (2.718โฆ), ฯ (1.618โฆ), sqrt(2) (1.414โฆ), sqrt(ยฝ) (0.707โฆ), or โ (infinity).",
	"MATH_CONSTANT_PI_TYPEBLOCK": "Constant PI",
	"MATH_CONSTANT_E_TYPEBLOCK": "Constant E",
	"MATH_CONSTANT_GOLDEN_RATIO_TYPEBLOCK": "Constant Golden Ratio (ฯ)",
	"MATH_CONSTANT_SQRT2_TYPEBLOCK": "Constant โ 2",
	"MATH_CONSTANT_SQRT1_2_TYPEBLOCK": "Constant โ 1/2",
	"MATH_CONSTANT_INFINITY_TYPEBLOCK": "Constant Infinity (โ)",
	"MATH_IS_EVEN": "is even",
	"MATH_IS_ODD": "is odd",
	"MATH_IS_PRIME": "is prime",
	"MATH_IS_WHOLE": "is whole",
	"MATH_IS_POSITIVE": "is positive",
	"MATH_IS_NEGATIVE": "is negative",
	"MATH_IS_DIVISIBLE_BY": "is divisible by",
	"MATH_IS_TOOLTIP": "Check if a number is an even, odd, prime, whole, positive, negative, or if it is divisible by certain number. Returns true or false.",
	"MATH_IS_EVEN_TYPEBLOCK": "Number Is Even",
	"MATH_IS_ODD_TYPEBLOCK": "Number Is Odd",
	"MATH_IS_PRIME_TYPEBLOCK": "Number Is Prime",
	"MATH_IS_WHOLE_TYPEBLOCK": "Number Is Whole",
	"MATH_IS_POSITIVE_TYPEBLOCK": "Number Is Positive",
	"MATH_IS_NEGATIVE_TYPEBLOCK": "Number Is Negative",
	"MATH_IS_DIVISIBLE_BY_TYPEBLOCK": "Number Is Divisible By",
	"MATH_CHANGE_HELPURL": "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter",
	"MATH_CHANGE_TITLE": "change %1 by %2",
	"MATH_CHANGE_TOOLTIP": "Add a number to variable '%1'.",
	"MATH_CHANGE_TYPEBLOCK": "Change Variable By Amount",
	"MATH_FORMAT_AS_DECIMAL_TITLE": "format as decimal  number %1 places %2",
	"MATH_FORMAT_AS_DECIMAL_TOOLTIP": "Format this number",
	"MATH_FORMAT_AS_DECIMAL_TYPEBLOCK": "Format as Decimal",
	"MATH_ONLIST_HELPURL": "https://en.wikipedia.org/wiki/Rounding",
	"MATH_ROUND_HELPURL": "https://en.wikipedia.org/wiki/Rounding",
	"MATH_ROUND_TOOLTIP": "Round a number up or down.",
	"MATH_ROUND_OPERATOR_ROUND": "round",
	"MATH_ROUND_OPERATOR_ROUNDUP": "round up",
	"MATH_ROUND_OPERATOR_ROUNDDOWN": "round down",
	"MATH_ROUND_ROUND_TYPEBLOCK": "Round",
	"MATH_ROUND_ROUNDUP_TYPEBLOCK": "Round Up",
	"MATH_ROUND_ROUNDDOWN_TYPEBLOCK": "Round Down",
	"MATH_ONLIST_HELPURL": "",
	"MATH_ONLIST_OPERATOR_SUM": "sum of list",
	"MATH_ONLIST_TOOLTIP_SUM": "Return the sum of all the numbers in the list.",
	"MATH_ONLIST_OPERATOR_MIN": "min of list",
	"MATH_ONLIST_TOOLTIP_MIN": "Return the smallest number in the list.",
	"MATH_ONLIST_OPERATOR_MAX": "max of list",
	"MATH_ONLIST_TOOLTIP_MAX": "Return the largest number in the list.",
	"MATH_ONLIST_OPERATOR_AVERAGE": "average of list",
	"MATH_ONLIST_TOOLTIP_AVERAGE": "Return the average (arithmetic mean) of the numeric values in the list.",
	"MATH_ONLIST_OPERATOR_MEDIAN": "median of list",
	"MATH_ONLIST_TOOLTIP_MEDIAN": "Return the median number in the list.",
	"MATH_ONLIST_OPERATOR_MODE": "modes of list",
	"MATH_ONLIST_TOOLTIP_MODE": "Return a list of the most common item(s) in the list.",
	"MATH_ONLIST_OPERATOR_STD_DEV": "standard deviation of list",
	"MATH_ONLIST_TOOLTIP_STD_DEV": "Return the standard deviation of the list.",
	"MATH_ONLIST_OPERATOR_RANDOM": "random item of list",
	"MATH_ONLIST_TOOLTIP_RANDOM": "Return a random element from the list.",
	"MATH_ONLIST_SUM_TYPEBLOCK": "Sum of List",
	"MATH_ONLIST_MIN_TYPEBLOCK": "Min of List",
	"MATH_ONLIST_MAX_TYPEBLOCK": "Max of List",
	"MATH_ONLIST_AVERAGE_TYPEBLOCK": "Average of List",
	"MATH_ONLIST_MEDIAN_TYPEBLOCK": "Median of List",
	"MATH_ONLIST_MODE_TYPEBLOCK": "Mode of List",
	"MATH_ONLIST_STD_DEV_TYPEBLOCK": "Standard Deviation of List",
	"MATH_ONLIST_RANDOM_TYPEBLOCK": "Random Item of List",
	"MATH_MODULO_HELPURL": "https://en.wikipedia.org/wiki/Modulo_operation",
	"MATH_MODULO_TITLE": "remainder of %1 รท %2",
	"MATH_MODULO_TOOLTIP": "Return the remainder from dividing the two numbers.",
	"MATH_MODULO_TYPEBLOCK": "Remainder of",
	"MATH_CONSTRAIN_HELPURL": "https://en.wikipedia.org/wiki/Clamping_%28graphics%29",
	"MATH_CONSTRAIN_TITLE": "constrain %1 low %2 high %3",
	"MATH_CONSTRAIN_TOOLTIP": "Constrain a number to be between the specified limits (inclusive).",
	"MATH_CONSTRAIN_TYPEBLOCK": "Constrain Number Low High",
	"MATH_RANDOM_INT_HELPURL": "https://en.wikipedia.org/wiki/Random_number_generation",
	"MATH_RANDOM_INT_TITLE": "random integer from %1 to %2",
	"MATH_RANDOM_INT_TOOLTIP": "Return a random integer between the two specified limits, inclusive.",
	"MATH_RANDOM_INT_TYPEBLOCK": "Random Integer",
	"MATH_RANDOM_FLOAT_HELPURL": "https://en.wikipedia.org/wiki/Random_number_generation",
	"MATH_RANDOM_FLOAT_TITLE_RANDOM": "random fraction",
	"MATH_RANDOM_FLOAT_TOOLTIP": "Return a random fraction between 0.0 (inclusive) and 1.0 (exclusive).",
	"MATH_RANDOM_FLOAT_TYPEBLOCK": "Random Fraction",
	"TEXT_TEXT_HELPURL": "https://en.wikipedia.org/wiki/String_(computer_science)",
	"TEXT_TEXT_TOOLTIP": "A letter, word, or line of text.",
	"TEXT_JOIN_HELPURL": "https://github.com/google/blockly/wiki/Text#text-creation",
	"TEXT_JOIN_TITLE_CREATEWITH": "create text with",
	"TEXT_JOIN_TOOLTIP": "Create a piece of text by joining together any number of items.",
	"TEXT_JOIN_TYPEBLOCK": "Create Text With",
	"TEXT_CREATE_JOIN_TITLE_JOIN": "join",
	"TEXT_CREATE_JOIN_TOOLTIP": "Add, remove, or reorder sections to reconfigure this text block.",
	"TEXT_CREATE_JOIN_ITEM_TOOLTIP": "Add an item to the text.",
	"TEXT_APPEND_HELPURL": "https://github.com/google/blockly/wiki/Text#text-modification",
	"TEXT_APPEND_TO": "to",
	"TEXT_APPEND_APPENDTEXT": "append text",
	"TEXT_APPEND_TOOLTIP": "Append some text to variable '%1'.",
	"TEXT_APPEND_TYPEBLOCK": "Append Text",
	"TEXT_LENGTH_HELPURL": "https://github.com/google/blockly/wiki/Text#text-modification",
	"TEXT_LENGTH_TITLE": "length of %1",
	"TEXT_LENGTH_TOOLTIP": "Returns the number of letters (including spaces) in the provided text.",
	"TEXT_LENGTH_TYPEBLOCK": "Length of Text",
	"TEXT_ISEMPTY_HELPURL": "https://github.com/google/blockly/wiki/Text#checking-for-empty-text",
	"TEXT_ISEMPTY_TITLE": "%1 is empty",
	"TEXT_ISEMPTY_TOOLTIP": "Returns true if the provided text is empty.",
	"TEXT_ISEMPTY_TYPEBLOCK": "Text is Empty",
	"TEXT_INDEXOF_HELPURL": "https://github.com/google/blockly/wiki/Text#finding-text",
	"TEXT_INDEXOF_TOOLTIP": "Returns the index of the first/last occurrence of the first text in the second text. Returns 0 if text is not found.",
	"TEXT_INDEXOF_INPUT_INTEXT": "in text",
	"TEXT_INDEXOF_OPERATOR_FIRST": "find first occurrence of text",
	"TEXT_INDEXOF_OPERATOR_LAST": "find last occurrence of text",
	"TEXT_INDEXOF_TAIL": "",
	"TEXT_INDEXOF_FIRST_TYPEBLOCK": "Find First Occurrence of Text",
	"TEXT_INDEXOF_LAST_TYPEBLOCK": "Find Last Occurrence of Text",
	"TEXT_CHARAT_HELPURL": "https://github.com/google/blockly/wiki/Text#extracting-text",
	"TEXT_CHARAT_INPUT_INTEXT": "in text",
	"TEXT_CHARAT_FROM_START": "get letter #",
	"TEXT_CHARAT_FROM_END": "get letter # from end",
	"TEXT_CHARAT_FIRST": "get first letter",
	"TEXT_CHARAT_LAST": "get last letter",
	"TEXT_CHARAT_RANDOM": "get random letter",
	"TEXT_CHARAT_TAIL": "",
	"TEXT_CHARAT_TOOLTIP": "Returns the letter at the specified position.",
	"TEXT_CHARAT_FROM_START": "In Text Get Letter #",
	"TEXT_CHARAT_FROM_END": "In Text Get Letter # From End",
	"TEXT_CHARAT_FIRST": "In Text Get First Letter",
	"TEXT_CHARAT_LAST": "In Text Get Last Letter",
	"TEXT_CHARAT_RANDOM": "In Text Get Random Letter",
	"TEXT_GET_SUBSTRING_TOOLTIP": "Returns a specified portion of the text.",
	"TEXT_GET_SUBSTRING_HELPURL": "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text",
	"TEXT_GET_SUBSTRING_INPUT_IN_TEXT": "in text",
	"TEXT_GET_SUBSTRING_START_FROM_START": "get substring from letter #",
	"TEXT_GET_SUBSTRING_START_FROM_END": "get substring from letter # from end",
	"TEXT_GET_SUBSTRING_START_FIRST": "get substring from first letter",
	"TEXT_GET_SUBSTRING_END_FROM_START": "to letter #",
	"TEXT_GET_SUBSTRING_END_FROM_END": "to letter # from end",
	"TEXT_GET_SUBSTRING_END_LAST": "to last letter",
	"TEXT_GET_SUBSTRING_TAIL": "",
	"TEXT_GET_SUBSTRING_START_FROM_START_TYPEBLOCK": "Get Substring From Letter #",
	"TEXT_GET_SUBSTRING_START_FROM_END_TYPEBLOCK": "Get Substring From Letter # From End",
	"TEXT_GET_SUBSTRING_START_FIRST_TYPEBLOCK": "Get Substring From First Letter",
	"TEXT_GET_SUBSTRING_END_FROM_START_TYPEBLOCK": " To Letter #",
	"TEXT_GET_SUBSTRING_END_FROM_END_TYPEBLOCK": " To Letter # From End",
	"TEXT_GET_SUBSTRING_END_LAST_TYPEBLOCK": " To Last Letter",
	"TEXT_CONTAINS_HELPURL": "http://appinventor.mit.edu/explore/ai2/support/blocks/text#contains",
	"TEXT_CONTAINS_INPUT": "contains text %1 piece %2",
	"TEXT_CONTAINS_TOOLTIP": "Tests whether the piece is contained in the text.",
	"TEXT_CONTAINS_TYPEBLOCK": "Text Contains",
	"TEXT_CHANGECASE_HELPURL": "https://github.com/google/blockly/wiki/Text#adjusting-text-case",
	"TEXT_CHANGECASE_TOOLTIP": "Return a copy of the text in a different case.",
	"TEXT_CHANGECASE_OPERATOR_UPPERCASE": "to UPPER CASE",
	"TEXT_CHANGECASE_OPERATOR_LOWERCASE": "to lower case",
	"TEXT_CHANGECASE_OPERATOR_TITLECASE": "to Title Case",
	"TEXT_CHANGECASE_UPPERCASE_TYPBLOCK": "Text to UPPER CASE",
	"TEXT_CHANGECASE_LOWERCASE_TYPBLOCK": "Text to lower case",
	"TEXT_CHANGECASE_TITLECASE_TYPBLOCK": "Text to Title Case",
	"TEXT_TRIM_HELPURL": "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces",
	"TEXT_TRIM_TOOLTIP": "Return a copy of the text with spaces removed from one or both ends.",
	"TEXT_TRIM_OPERATOR_BOTH": "trim spaces from both sides of",
	"TEXT_TRIM_OPERATOR_LEFT": "trim spaces from left side of",
	"TEXT_TRIM_OPERATOR_RIGHT": "trim spaces from right side of",
	"TEXT_TRIM_BOTH_TYPEBLOCK": "Trim Spaces From Both Sides Of Text",
	"TEXT_TRIM_LEFT_TYPEBLOCK": "Trim Spaces From Left Side Of Text",
	"TEXT_TRIM_RIGHT_TYPEBLOCK": "Trim Spaces From Right Side Of Text",
	"TEXT_PRINT_HELPURL": "https://github.com/google/blockly/wiki/Text#printing-text",
	"TEXT_PRINT_TITLE": "print %1",
	"TEXT_PRINT_TOOLTIP": "Print the specified text, number or other value.",
	"TEXT_PRINT_TYPEBLOCK": "Print Text",
	"TEXT_PRINTF_HELPURL": "https://github.com/google/blockly/wiki/Text#printing-text",
	"TEXT_PRINTF_TITLE": "printf format %1",
	"TEXT_PRINTF_TOOLTIP": "Printf the specified text, number or other value.",
	"TEXT_PRINTF_TYPEBLOCK": "Printf Text",
	"TEXT_PRINTF_CREATEWITH": "create text with",
	"TEXT_SPRINTF_HELPURL": "https://github.com/google/blockly/wiki/Text#printing-text",
	"TEXT_SPRINTF_TITLE": "sprintf format %1",
	"TEXT_SPRINTF_TOOLTIP": "Sprintf the specified text, number or other value.",
	"TEXT_SPRINTF_TYPEBLOCK": "Sprintf Text",
	"TEXT_SPRINTF_CREATEWITH": "create text with",
	"TEXT_PROMPT_HELPURL": "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user",
	"TEXT_PROMPT_TYPE_TEXT": "prompt for text with message",
	"TEXT_PROMPT_TYPE_NUMBER": "prompt for number with message",
	"TEXT_PROMPT_TOOLTIP_NUMBER": "Prompt for user for a number.",
	"TEXT_PROMPT_TOOLTIP_TEXT": "Prompt for user for some text.",
	"TEXT_PROMPT_TEXT_TYPEBLOCK": "Prompt For Text With Message",
	"TEXT_PROMPT_NUMBER_TYPEBLOCK": "Prompt For Number With Message",
	"TEXT_COMMENT_TEXT": "Comment:",
	"TEXT_COMMENT_TYPEBLOCK": "Comment",
	"LISTS_CREATE_EMPTY_HELPURL": "https://github.com/google/blockly/wiki/Lists#create-empty-list",
	"LISTS_CREATE_EMPTY_TITLE": "create empty list",
	"LISTS_CREATE_EMPTY_TOOLTIP": "Returns a list, of length 0, containing no data records",
	"LISTS_CREATE_EMPTY_TYPEBLOCK": "Create Empty List",
	"LISTS_CREATE_WITH_HELPURL": "https://github.com/google/blockly/wiki/Lists#create-list-with",
	"LISTS_CREATE_WITH_TOOLTIP": "Create a list with any number of items.",
	"LISTS_CREATE_WITH_INPUT_WITH": "create list with",
	"LISTS_CREATE_WITH_TYPEBLOCK": "Create List With",
	"LISTS_CREATE_WITH_CONTAINER_TITLE_ADD": "list",
	"LISTS_CREATE_WITH_CONTAINER_TOOLTIP": "Add, remove, or reorder sections to reconfigure this list block.",
	"LISTS_CREATE_WITH_ITEM_TOOLTIP": "Add an item to the list.",
	"LISTS_REPEAT_HELPURL": "https://github.com/google/blockly/wiki/Lists#create-list-with",
	"LISTS_REPEAT_TOOLTIP": "Creates a list consisting of the given value repeated the specified number of times.",
	"LISTS_REPEAT_TITLE": "create list with item %1 repeated %2 times",
	"LISTS_REPEAT_TYPEBLOCK": "Create List With Repeated Item",
	"LISTS_LENGTH_HELPURL": "https://github.com/google/blockly/wiki/Lists#length-of",
	"LISTS_LENGTH_TITLE": "length of %1",
	"LISTS_LENGTH_TOOLTIP": "Returns the length of a list.",
	"LISTS_LENGTH_TYPEBLOCK": "Length Of List",
	"LISTS_ISEMPTY_HELPURL": "https://github.com/google/blockly/wiki/Lists#is-empty",
	"LISTS_ISEMPTY_TITLE": "%1 is empty",
	"LISTS_ISEMPTY_TOOLTIP": "Returns true if the list is empty.",
	"LISTS_ISEMPTY_TYPEBLOCK": "Is List Empty?",
	"LISTS_INLIST": "in list",
	"LISTS_INDEX_OF_HELPURL": "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list",
	"LISTS_INDEX_OF_FIRST": "find first occurrence of item",
	"LISTS_INDEX_OF_LAST": "find last occurrence of item",
	"LISTS_INDEX_OF_TOOLTIP": "Returns the index of the first/last occurrence of the item in the list. Returns 0 if item is not found.",
	"LISTS_INDEX_OF_FIRST_TYPEBLOCK": "Find First Occurrence Of Item",
	"LISTS_INDEX_OF_LAST_TYPEBLOCK": "Find Last Occurrence Of Item",
	"LISTS_GET_INDEX_GET": "get",
	"LISTS_GET_INDEX_GET_REMOVE": "get and remove",
	"LISTS_GET_INDEX_REMOVE": "remove",
	"LISTS_GET_INDEX_FROM_START": "#",
	"LISTS_GET_INDEX_FROM_END": "# from end",
	"LISTS_GET_INDEX_FIRST": "first",
	"LISTS_GET_INDEX_LAST": "last",
	"LISTS_GET_INDEX_RANDOM": "random",
	"LISTS_GET_INDEX_TAIL": "",
	"LISTS_GET_INDEX_TOOLTIP_GET_FROM_START": "Returns the item at the specified position in a list. #1 is the first item.",
	"LISTS_GET_INDEX_TOOLTIP_GET_FROM_END": "Returns the item at the specified position in a list. #1 is the last item.",
	"LISTS_GET_INDEX_TOOLTIP_GET_FIRST": "Returns the first item in a list.",
	"LISTS_GET_INDEX_TOOLTIP_GET_LAST": "Returns the last item in a list.",
	"LISTS_GET_INDEX_TOOLTIP_GET_RANDOM": "Returns a random item in a list.",
	"LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START": "Removes and returns the item at the specified position in a list. #1 is the first item.",
	"LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END": "Removes and returns the item at the specified position in a list. #1 is the last item.",
	"LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST": "Removes and returns the first item in a list.",
	"LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST": "Removes and returns the last item in a list.",
	"LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM": "Removes and returns a random item in a list.",
	"LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START": "Removes the item at the specified position in a list. #1 is the first item.",
	"LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END": "Removes the item at the specified position in a list. #1 is the last item.",
	"LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST": "Removes the first item in a list.",
	"LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST": "Removes the last item in a list.",
	"LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM": "Removes a random item in a list.",
	"LISTS_GET_INDEX_GET_FROM_START_TYPEBLOCK": "Get Item From Start of List",
	"LISTS_GET_INDEX_GET_FROM_END_TYPEBLOCK": "Get Item From End of List",
	"LISTS_GET_INDEX_GET_FIRST_TYPEBLOCK": "Get First Item of List",
	"LISTS_GET_INDEX_GET_LAST_TYPEBLOCK": "Get Last Item of List",
	"LISTS_GET_INDEX_GET_RANDOM_TYPEBLOCK": "Get Random Item of List",
	"LISTS_GET_INDEX_GET_REMOVE_FROM_START_TYPEBLOCK": "Get and Remove Item From Start of List",
	"LISTS_GET_INDEX_GET_REMOVE_FROM_END_TYPEBLOCK": "Get and Remove Item From End of List",
	"LISTS_GET_INDEX_GET_REMOVE_FIRST_TYPEBLOCK": "Get and Remove First Item of List",
	"LISTS_GET_INDEX_GET_REMOVE_LAST_TYPEBLOCK": "Get and Remove Last Item of List",
	"LISTS_GET_INDEX_GET_REMOVE_RANDOM_TYPEBLOCK": "Get and Remove Random Item of List",
	"LISTS_GET_INDEX_REMOVE_FROM_START_TYPEBLOCK": "Remove Item From Start of List",
	"LISTS_GET_INDEX_REMOVE_FROM_END_TYPEBLOCK": "Remove Item From End of List",
	"LISTS_GET_INDEX_REMOVE_FIRST_TYPEBLOCK": "Remove First Item of List",
	"LISTS_GET_INDEX_REMOVE_LAST_TYPEBLOCK": "Remove Last Item of List",
	"LISTS_GET_INDEX_REMOVE_RANDOM_TYPEBLOCK": "Remove Random Item of List",
	"LISTS_SET_INDEX_HELPURL": "https://github.com/google/blockly/wiki/Lists#in-list--set",
	"LISTS_SET_INDEX_SET": "set",
	"LISTS_SET_INDEX_INSERT": "insert at",
	"LISTS_SET_INDEX_INPUT_TO": "as",
	"LISTS_SET_INDEX_TOOLTIP_SET_FROM_START": "Sets the item at the specified position in a list. #1 is the first item.",
	"LISTS_SET_INDEX_TOOLTIP_SET_FROM_END": "Sets the item at the specified position in a list. #1 is the last item.",
	"LISTS_SET_INDEX_TOOLTIP_SET_FIRST": "Sets the first item in a list.",
	"LISTS_SET_INDEX_TOOLTIP_SET_LAST": "Sets the last item in a list.",
	"LISTS_SET_INDEX_TOOLTIP_SET_RANDOM": "Sets a random item in a list.",
	"LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START": "Inserts the item at the specified position in a list. #1 is the first item.",
	"LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END": "Inserts the item at the specified position in a list. #1 is the last item.",
	"LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST": "Inserts the item at the start of a list.",
	"LISTS_SET_INDEX_TOOLTIP_INSERT_LAST": "Append the item to the end of a list.",
	"LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM": "Inserts the item randomly in a list.",
	"LISTS_SET_INDEX_SET_FROM_START_TYPEBLOCK": "Set Item at Position in List",
	"LISTS_SET_INDEX_SET_FROM_END_TYPEBLOCK": "Set Item at Position from End of List",
	"LISTS_SET_INDEX_SET_FIRST_TYPEBLOCK": "Set First Item in List",
	"LISTS_SET_INDEX_SET_LAST_TYPEBLOCK": "Set Last Item in List",
	"LISTS_SET_INDEX_SET_RANDOM_TYPEBLOCK": "Set a Random Item in List",
	"LISTS_SET_INDEX_INSERT_FROM_START_TYPEBLOCK": "Inserts at Position in List",
	"LISTS_SET_INDEX_INSERT_FROM_END_TYPEBLOCK": "Insert at Position from End of List",
	"LISTS_SET_INDEX_INSERT_FIRST_TYPEBLOCK": "Insert at Start of List",
	"LISTS_SET_INDEX_INSERT_LAST_TYPEBLOCK": "Append to End of List",
	"LISTS_SET_INDEX_INSERT_RANDOM_TYPEBLOCK": "Insert At Random Location in List",
	"LISTS_GET_SUBLIST_HELPURL": "https://github.com/google/blockly/wiki/Lists#getting-a-sublist",
	"LISTS_GET_SUBLIST_START_FROM_START": "get sub-list from #",
	"LISTS_GET_SUBLIST_START_FROM_END": "get sub-list from # from end",
	"LISTS_GET_SUBLIST_START_FIRST": "get sub-list from first",
	"LISTS_GET_SUBLIST_END_FROM_START": "to #",
	"LISTS_GET_SUBLIST_END_FROM_END": "to # from end",
	"LISTS_GET_SUBLIST_END_LAST": "to last",
	"LISTS_GET_SUBLIST_TAIL": "",
	"LISTS_GET_SUBLIST_TOOLTIP": "Creates a copy of the specified portion of a list.",
	"LISTS_GET_SUBLIST_TYPEBLOCK": "Get Sub-List",
	"LISTS_SPLIT_HELPURL": "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists",
	"LISTS_SPLIT_LIST_FROM_TEXT": "make list from text",
	"LISTS_SPLIT_TEXT_FROM_LIST": "make text from list",
	"LISTS_SPLIT_WITH_DELIMITER": "with delimiter",
	"LISTS_SPLIT_TOOLTIP_SPLIT": "Split text into a list of texts, breaking at each delimiter.",
	"LISTS_SPLIT_TOOLTIP_JOIN": "Join a list of texts into one text, separated by a delimiter.",
	"LISTS_SPLIT_LIST_FROM_TEXT_TYPEBLOCK": "Make List From Text",
	"LISTS_SPLIT_TEXT_FROM_LIST_TYPEBLOCK": "Make Text From List",
	"MAPS_CREATE_EMPTY_HELPURL": "https://github.com/google/blockly/wiki/Maps#create-empty-Map",
	"MAPS_CREATE_EMPTY_TITLE": "create empty map",
	"MAPS_CREATE_EMPTY_TOOLTIP": "Returns a Map, of length 0, containing no data records",
	"MAPS_CREATE_EMPTY_TYPEBLOCK": "Create Empty Map",
	"MAPS_CREATE_WITH_HELPURL": "https://github.com/google/blockly/wiki/Maps#create-Map-with",
	"MAPS_CREATE_WITH_TOOLTIP": "Create a Map with any number of items.",
	"MAPS_CREATE_WITH_INPUT_WITH": "create map with",
	"MAPS_CREATE_WITH_TYPEBLOCK": "Create Map With",
	"MAPS_CREATE_WITH_CONTAINER_TITLE_ADD": "Map",
	"MAPS_CREATE_WITH_CONTAINER_TOOLTIP": "Add, remove, or reorder sections to reconfigure this Map block.",
	"MAPS_CREATE_WITH_ITEM_TOOLTIP": "Add an item to the Map.",
	"MAPS_CREATE_HELPURL": "https://github.com/google/blockly/wiki/Maps#create-empty-Map",
	"MAPS_CREATE_TITLE": "map key %1 as %2",
	"MAPS_CREATE_TOOLTIP": "Returns a Map, of length 0, containing no data records",
	"MAPS_CREATE_TYPEBLOCK": "Map Key",
	"MAPS_LENGTH_HELPURL": "https://github.com/google/blockly/wiki/Maps#length-of",
	"MAPS_LENGTH_TITLE": "size of %1",
	"MAPS_LENGTH_TOOLTIP": "Returns the number of entries in a Map.",
	"MAPS_LENGTH_TYPEBLOCK": "Size Of Map",
	"MAPS_ISEMPTY_HELPURL": "https://github.com/google/blockly/wiki/Maps#is-empty",
	"MAPS_ISEMPTY_TITLE": "%1 is empty",
	"MAPS_ISEMPTY_TOOLTIP": "Returns true if the Map is empty.",
	"MAPS_ISEMPTY_TYPEBLOCK": "Is Map Empty?",
	"MAPS_INMAP": "in map",
	"MAPS_INDEX_OF_HELPURL": "https://github.com/google/blockly/wiki/Maps#getting-items-from-a-Map",
	"MAPS_INDEX_OF_FIRST": "find first occurrence of item",
	"MAPS_INDEX_OF_LAST": "find last occurrence of item",
	"MAPS_INDEX_OF_TOOLTIP": "Returns the index of the first/last occurrence of the item in the Map. Returns 0 if text is not found.",
	"MAPS_INDEX_OF_FIRST_TYPEBLOCK": "Find First Occurrence Of Item",
	"MAPS_INDEX_OF_LAST_TYPEBLOCK": "Find Last Occurrence Of Item",
	"MAPS_GET_INDEX_GET": "get",
	"MAPS_GET_INDEX_GET_REMOVE": "get and remove",
	"MAPS_GET_INDEX_REMOVE": "remove",
	"MAPS_GET_INDEX_FROM_START": "#",
	"MAPS_GET_INDEX_FROM_END": "# from end",
	"MAPS_GET_INDEX_FIRST": "first",
	"MAPS_GET_INDEX_LAST": "last",
	"MAPS_GET_INDEX_TAIL": "",
	"MAPS_GET_INDEX_TOOLTIP_GET": "Returns the item at the specified position in a Map.",
	"MAPS_GET_INDEX_TOOLTIP_GET_REMOVE": "Removes and returns the item at the specified position in a Map.",
	"MAPS_GET_INDEX_TOOLTIP_REMOVE": "Removes the item at the specified position in a Map.",
	"MAPS_GET_INDEX_GET_TYPEBLOCK": "Get Item From a Map",
	"MAPS_GET_INDEX_GET_REMOVE_TYPEBLOCK": "Get and Remove Item From a Map",
	"MAPS_GET_INDEX_REMOVE_TYPEBLOCK": "Remove Item From a Map",
	"MAPS_SET_INDEX_HELPURL": "https://github.com/google/blockly/wiki/Maps#in-Map--set",
	"MAPS_SET_INDEX_SET": "set",
	"MAPS_SET_INDEX_INSERT": "insert at",
	"MAPS_SET_INDEX_INPUT_TO": "as",
	"MAPS_SET_INDEX_TOOLTIP": "Sets the item at the specified position in a Map.",
	"MAPS_SET_INDEX_TYPEBLOCK": "Set Item at Position in Map",
	"MAPS_KEYS_TITLE": "get keys of %1",
	"MAPS_KEYS_TYPEBLOCK": "Get Keys of Map",
	"ORDINAL_NUMBER_SUFFIX": "",
	"VARIABLES_GET_HELPURL": "https://github.com/google/blockly/wiki/Variables#get",
	"VARIABLES_GET_TOOLTIP": "Returns the value of this variable.",
	"VARIABLES_GET_CREATE_SET": "Create 'set %1'",
	"VARIABLES_SET_HELPURL": "https://github.com/google/blockly/wiki/Variables#set",
	"VARIABLES_SET": "set %1 to %2",
	"VARIABLES_SET_TOOLTIP": "Sets this variable to be equal to the input.",
	"VARIABLES_SET_CREATE_GET": "Create 'get %1'",
	"SCOPE_VARIABLES_SET": "set %1 : %2 to %3",
	"INITIALIZE_VARIABLE": "Initialize %1 as %2 with %3",
	"INITIALIZE_GLOBAL_VARIABLE": "Initialize global",
	"INITIALIZE_LOCAL_VARIABLE": "Initialize local",
	"PROCEDURES_DEFNORETURN_HELPURL": "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29",
	"PROCEDURES_DEFNORETURN_TITLE": "to",
	"PROCEDURES_DEFNORETURN_PROCEDURE": "do something",
	"PROCEDURES_BEFORE_PARAMS": "with:",
	"PROCEDURES_CALL_BEFORE_PARAMS": "with:",
	"PROCEDURES_DEFNORETURN_DO": "",
	"PROCEDURES_DEFNORETURN_TOOLTIP": "Creates a function with no output.",
	"PROCEDURES_DEFRETURN_HELPURL": "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29",
	"PROCEDURES_DEFRETURN_RETURN": "return",
	"PROCEDURES_DEFRETURN_TOOLTIP": "Creates a function with an output.",
	"PROCEDURES_NEWTYPE": "New Type...",
	"PROCEDURES_NEWTYPETITLE": "New Type name:",
	"PROCEDURES_ALLOW_STATEMENTS": "allow statements",
	"PROCEDURES_DEF_DUPLICATE_WARNING": "Warning: This function has duplicate parameters.",
	"PROCEDURES_CALLNORETURN_HELPURL": "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29",
	"PROCEDURES_CALLNORETURN_CALL": "",
	"PROCEDURES_CALLNORETURN_TOOLTIP": "Run the user-defined function '%1'.",
	"PROCEDURES_CALLRETURN_HELPURL": "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29",
	"PROCEDURES_CALLRETURN_TOOLTIP": "Run the user-defined function '%1' and use its output.",
	"PROCEDURES_MUTATORCONTAINER_TITLE": "inputs",
	"PROCEDURES_MUTATORCONTAINER_TOOLTIP": "Add, remove, or reorder inputs to this function.",
	"PROCEDURES_MUTATORARG_TITLE": "input name:",
	"PROCEDURES_MUTATORARG_TOOLTIP": "Add an input to the function.",
	"CLICK_ADD_TOOLTIP": "Add an element",
	"CLICK_REMOVE_TOOLTIP": "Remove this element",
	"PROCEDURES_PARAM_NOTYPE": "with %1 %2%3",
	"PROCEDURES_PARAM_WITH_TYPE": "with %1 as %2%3%4",
	"PROCEDURES_HIGHLIGHT_DEF": "Highlight function definition",
	"PROCEDURES_CREATE_DO": "Create '%1'",
	"PROCEDURES_IFRETURN_TOOLTIP": "If a value is true, then return a second value.",
	"PROCEDURES_IFRETURN_WARNING": "Warning: This block may be used only within a function definition.",
	"TEXT_TYPE_JAVA": "insert java code",
	"TEXT_TYPE_PYTHON": "insert python code",
	"TEXT_TOOLTIP_TYPE_JAVA": "Insert arbitrary Java code",
	"TEXT_TOOLTIP_TYPE_PYTHON": "Insert arbitrary Python code",
	"TEXT_TYPE_JAVA_TYPEBLOCK": "insert java code",
	"TEXT_TYPE_PYTHON_TYPEBLOCK": "insert python code",
	"IMPORT_JAR_TYPEBLOCK": "insert python code",
	"IMPORT_JAR_HELPURL": "https://github.com/google/blockly/wiki/Variables#set",
	"IMPORT_JAR": "import jar %1 %2 package %3 class %4 method %5 %6",
	"IMPORT_JAR_TOOLTIP": "Sets this variable to be equal to the input.",
	"IMPORT_JAR_GET": "Create 'get %1'",
	"PROCEDURES_DEFFUNCTIONNORETURN_TITLE": "Function",
	"COLOUR_HEX_TO_DECIMAL_TYPEBLOCK": "to decimal",
	"COLOUR_HEX": "hex",
	"COLOUR_TO_DECIMAL_BLOCK_TITLE": "to decimal",
	"DELETE_ALL_BLOCKS": "Delete All Blocks",
	"LOGIC_THIS": "This"
}

// This file was automatically generated.  Do not modify.

'use strict';

Blockly.Msg["ADD_COMMENT"] = "Yorum Ekle";
Blockly.Msg["AUTH"] = "Çalışmanızın kaydedilmesi ve sizinle paylaşılmasına izin verilmesi için lütfen bu uygulamaya yetki verin.";
Blockly.Msg["CHANGE_VALUE_TITLE"] = "Değeri değiştir:";
Blockly.Msg["CHAT"] = "Bu kutuya yazarak iş birlikçin ile sohbet et!";
Blockly.Msg["CLEAN_UP"] = "Blokları temizle";
Blockly.Msg["CLICK_ADD_TOOLTIP"] = "Add an element";  // untranslated
Blockly.Msg["CLICK_REMOVE_TOOLTIP"] = "Remove this element";  // untranslated
Blockly.Msg["COLLAPSE_ALL"] = "Blokları Daralt";
Blockly.Msg["COLLAPSE_BLOCK"] = "Blok'u Daralt";
Blockly.Msg["COLOUR_BLEND_COLOUR1"] = "renk 1";
Blockly.Msg["COLOUR_BLEND_COLOUR2"] = "renk 2";
Blockly.Msg["COLOUR_BLEND_HELPURL"] = "http://meyerweb.com/eric/tools/color-blend/";
Blockly.Msg["COLOUR_BLEND_RATIO"] = "oran";
Blockly.Msg["COLOUR_BLEND_TITLE"] = "karıştır";
Blockly.Msg["COLOUR_BLEND_TOOLTIP"] = "Verilen bir orana bağlı olarak iki rengi karıştırır. (0.0 - 1.0).";
Blockly.Msg["COLOUR_BLEND_TYPEBLOCK"] = "Blend Colour";  // untranslated
Blockly.Msg["COLOUR_HEX"] = "hex";  // untranslated
Blockly.Msg["COLOUR_HEX_TO_DECIMAL_TYPEBLOCK"] = "to decimal";  // untranslated
Blockly.Msg["COLOUR_PICKER_HELPURL"] = "https://tr.wikipedia.org/wiki/Renk";
Blockly.Msg["COLOUR_PICKER_TOOLTIP"] = "Paletten bir renk seçin.";
Blockly.Msg["COLOUR_PICKER_TYPEBLOCK"] = "Choose Colour";  // untranslated
Blockly.Msg["COLOUR_RANDOM_HELPURL"] = "http://randomcolour.com";  // untranslated
Blockly.Msg["COLOUR_RANDOM_TITLE"] = "rastgele renk";
Blockly.Msg["COLOUR_RANDOM_TOOLTIP"] = "Rastgele bir renk seçin.";
Blockly.Msg["COLOUR_RANDOM_TYPEBLOCK"] = "Random Colour";  // untranslated
Blockly.Msg["COLOUR_RGB_BLUE"] = "mavi";
Blockly.Msg["COLOUR_RGB_GREEN"] = "yeşil";
Blockly.Msg["COLOUR_RGB_HELPURL"] = "http://www.december.com/html/spec/colorper.html";
Blockly.Msg["COLOUR_RGB_RED"] = "kırmızı";
Blockly.Msg["COLOUR_RGB_TITLE"] = "renk değerleri";
Blockly.Msg["COLOUR_RGB_TOOLTIP"] = "Kırmızı, yeşil ve mavinin belirtilen miktarıyla bir renk oluşturun.  Tüm değerler 0 ile 100 arasında olmalıdır.";
Blockly.Msg["COLOUR_RGB_TYPEBLOCK"] = "Colour with";  // untranslated
Blockly.Msg["COLOUR_TO_DECIMAL_BLOCK_TITLE"] = "to decimal";  // untranslated
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_BREAK_TYPEBLOCK"] = "Break Loop";  // untranslated
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_CONTINUE_TYPEBLOCK"] = "Continue Loop";  // untranslated
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK"] = "döngüden çık";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE"] = "döngünün sonraki adımından devam et";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK"] = "İçeren döngüden çık.";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE"] = "Bu döngünün geri kalanını atlayın ve sonraki adım ile devam edin.";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_WARNING"] = "Uyarı: Bu blok sadece bir döngü içinde kullanılabilir.";
Blockly.Msg["CONTROLS_FOREACH_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
Blockly.Msg["CONTROLS_FOREACH_KEY_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
Blockly.Msg["CONTROLS_FOREACH_KEY_TITLE"] = "for each key %1 in map %2";  // untranslated
Blockly.Msg["CONTROLS_FOREACH_KEY_TYPEBLOCK"] = "For Each Key In Map";  // untranslated
Blockly.Msg["CONTROLS_FOREACH_TITLE"] = "her öğe için %1 listede %2";
Blockly.Msg["CONTROLS_FOREACH_TOOLTIP"] = "Bir listedeki her öğe için  '%1' değişkenini maddeye atayın  ve bundan sonra bazı açıklamalar yapın.";
Blockly.Msg["CONTROLS_FOREACH_TYPEBLOCK"] = "For Each Item In List";  // untranslated
Blockly.Msg["CONTROLS_FOR_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
Blockly.Msg["CONTROLS_FOR_TITLE"] = "ile sayılır %1 %2 den %3 ye, her adımda %4 değişim";
Blockly.Msg["CONTROLS_FOR_TOOLTIP"] = "\"%1\" değişkenini başlangıç numarasından bitiş numarasına kadar tanımlı farkla değerler verirken tanımlı blokları yap.";
Blockly.Msg["CONTROLS_FOR_TYPEBLOCK"] = "Count With From To By";  // untranslated
Blockly.Msg["CONTROLS_IF_ELSEIF_TOOLTIP"] = "If bloğuna bir koşul ekleyin.";
Blockly.Msg["CONTROLS_IF_ELSE_TOOLTIP"] = "If bloğuna kalan durumları \"yakalayan\" bir son ekle.";
Blockly.Msg["CONTROLS_IF_ELSE_TYPEBLOCK"] = "If Else";  // untranslated
Blockly.Msg["CONTROLS_IF_ELSIF_ELSE_TYPEBLOCK"] = "If Else If Else";  // untranslated
Blockly.Msg["CONTROLS_IF_ELSIF_TYPEBLOCK"] = "If Else If";  // untranslated
Blockly.Msg["CONTROLS_IF_HELPURL"] = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
Blockly.Msg["CONTROLS_IF_IF_TOOLTIP"] = "If bloğuna ekle, kaldır veya yeniden düzenleme yap.";
Blockly.Msg["CONTROLS_IF_MSG_ELSE"] = "değilse";
Blockly.Msg["CONTROLS_IF_MSG_ELSEIF"] = "değilse eğer";
Blockly.Msg["CONTROLS_IF_MSG_IF"] = "eğer";
Blockly.Msg["CONTROLS_IF_TOOLTIP_1"] = "Eğer değişken true , yani gerçekleşmiş ise , ardından gelen işlemi yerine getir .";
Blockly.Msg["CONTROLS_IF_TOOLTIP_2"] = "Eğer değişken true, yani gerçekleşiyor ise ilk blok'taki işlemleri yerine getir, Aksi halde ikinci blok'taki işlemleri yerine getir.";
Blockly.Msg["CONTROLS_IF_TOOLTIP_3"] = "Eğer ilk değişken true, yani koşul gerçekleşmiş ise ilk blok içerisindeki işlem(ler)i gerçekleştir. Eğer ikinci değişken true ise, ikinci bloktaki işlem(ler)i gerçekleştir .";
Blockly.Msg["CONTROLS_IF_TOOLTIP_4"] = "Eğer ilk değer true, yani olumlu ise, ilk blok'taki işlem(ler)i gerçekleştir. İlk değer true değil ama ikinci değer true ise, ikinci bloktaki işlem(ler)i gerçekleştir. Eğer değerlerin hiçbiri true değil ise son blok'taki işlem(ler)i gerçekleştir.";
Blockly.Msg["CONTROLS_IF_TYPEBLOCK"] = "If";  // untranslated
Blockly.Msg["CONTROLS_REPEAT_HELPURL"] = "https://tr.wikipedia.org/wiki/For_d%C3%B6ng%C3%BCs%C3%BC";
Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"] = "yap";
Blockly.Msg["CONTROLS_REPEAT_TITLE"] = "%1 kez tekrarla";
Blockly.Msg["CONTROLS_REPEAT_TITLE_REPEAT"] = "repeat";  // untranslated
Blockly.Msg["CONTROLS_REPEAT_TITLE_TIMES"] = "times";  // untranslated
Blockly.Msg["CONTROLS_REPEAT_TOOLTIP"] = "Bazı işlemleri birkaç kez yap.";
Blockly.Msg["CONTROLS_REPEAT_TYPEBLOCK"] = "Repeat Times";  // untranslated
Blockly.Msg["CONTROLS_WHILEUNTIL_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
Blockly.Msg["CONTROLS_WHILEUNTIL_OPERATOR_UNTIL"] = "kadar tekrarla";
Blockly.Msg["CONTROLS_WHILEUNTIL_OPERATOR_WHILE"] = "tekrar ederken";
Blockly.Msg["CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL"] = "Bir değer yanlış olduğunda bazı beyanlarda bulun.";
Blockly.Msg["CONTROLS_WHILEUNTIL_TOOLTIP_WHILE"] = "Bir değer doğru olduğunda bazı beyanlarda bulun.";
Blockly.Msg["CONTROLS_WHILEUNTIL_UNTIL_TYPEBLOCK"] = "Repeat Unitl";  // untranslated
Blockly.Msg["CONTROLS_WHILEUNTIL_WHILE_TYPEBLOCK"] = "Repeat While";  // untranslated
Blockly.Msg["DELETE_ALL_BLOCKS"] = "Delete All Blocks";  // untranslated
Blockly.Msg["DELETE_BLOCK"] = "Bloğu Sil";
Blockly.Msg["DELETE_X_BLOCKS"] = "%1 Blokları Sil";
Blockly.Msg["DISABLE_BLOCK"] = "Bloğu Devre Dışı Bırak";
Blockly.Msg["DUPLICATE_BLOCK"] = "Çoğalt";
Blockly.Msg["ENABLE_BLOCK"] = "Bloğu Etkinleştir";
Blockly.Msg["EXPAND_ALL"] = "Blokları Genişlet";
Blockly.Msg["EXPAND_BLOCK"] = "Bloğu Genişlet";
Blockly.Msg["EXTERNAL_INPUTS"] = "Harici Girişler";
Blockly.Msg["HELP"] = "Yardım";
Blockly.Msg["IMPORT_JAR"] = "import jar %1 %2 package %3 class %4 method %5 %6";  // untranslated
Blockly.Msg["IMPORT_JAR_GET"] = "Create 'get %1'";  // untranslated
Blockly.Msg["IMPORT_JAR_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg["IMPORT_JAR_TOOLTIP"] = "Sets this variable to be equal to the input.";  // untranslated
Blockly.Msg["IMPORT_JAR_TYPEBLOCK"] = "insert python code";  // untranslated
Blockly.Msg["INITIALIZE_GLOBAL_VARIABLE"] = "Initialize global";  // untranslated
Blockly.Msg["INITIALIZE_LOCAL_VARIABLE"] = "Initialize local";  // untranslated
Blockly.Msg["INITIALIZE_VARIABLE"] = "Initialize %1 as %2 with %3";  // untranslated
Blockly.Msg["INLINE_INPUTS"] = "Satır içi girdiler";
Blockly.Msg["LISTS_CREATE_EMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-empty-list";
Blockly.Msg["LISTS_CREATE_EMPTY_TITLE"] = "Boş liste oluştur";
Blockly.Msg["LISTS_CREATE_EMPTY_TOOLTIP"] = "Veri kaydı içermeyen uzunluğu 0 olan bir listeyi verir";
Blockly.Msg["LISTS_CREATE_EMPTY_TYPEBLOCK"] = "Create Empty List";  // untranslated
Blockly.Msg["LISTS_CREATE_WITH_CONTAINER_TITLE_ADD"] = "liste";
Blockly.Msg["LISTS_CREATE_WITH_CONTAINER_TOOLTIP"] = "Bu liste bloğunu yeniden yapılandırmak için bölüm ekle,kaldır veya yeniden çağır.";
Blockly.Msg["LISTS_CREATE_WITH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg["LISTS_CREATE_WITH_INPUT_WITH"] = "İle liste oluşturma";
Blockly.Msg["LISTS_CREATE_WITH_ITEM_TOOLTIP"] = "Listeye bir nesne ekle.";
Blockly.Msg["LISTS_CREATE_WITH_TOOLTIP"] = "Herhangi sayıda nesne içeren bir liste oluştur.";
Blockly.Msg["LISTS_CREATE_WITH_TYPEBLOCK"] = "Create List With";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_FIRST"] = "ilk";
Blockly.Msg["LISTS_GET_INDEX_FROM_END"] = "# sonundan";
Blockly.Msg["LISTS_GET_INDEX_FROM_START"] = "# Kare";
Blockly.Msg["LISTS_GET_INDEX_GET"] = "Al";
Blockly.Msg["LISTS_GET_INDEX_GET_FIRST_TYPEBLOCK"] = "Get First Item of List";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_GET_FROM_END_TYPEBLOCK"] = "Get Item From End of List";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_GET_FROM_START_TYPEBLOCK"] = "Get Item From Start of List";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_GET_LAST_TYPEBLOCK"] = "Get Last Item of List";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_GET_RANDOM_TYPEBLOCK"] = "Get Random Item of List";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_GET_REMOVE"] = "al ve kaldır";
Blockly.Msg["LISTS_GET_INDEX_GET_REMOVE_FIRST_TYPEBLOCK"] = "Get and Remove First Item of List";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_GET_REMOVE_FROM_END_TYPEBLOCK"] = "Get and Remove Item From End of List";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_GET_REMOVE_FROM_START_TYPEBLOCK"] = "Get and Remove Item From Start of List";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_GET_REMOVE_LAST_TYPEBLOCK"] = "Get and Remove Last Item of List";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_GET_REMOVE_RANDOM_TYPEBLOCK"] = "Get and Remove Random Item of List";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_LAST"] = "son";
Blockly.Msg["LISTS_GET_INDEX_RANDOM"] = "rastgele";
Blockly.Msg["LISTS_GET_INDEX_REMOVE"] = "kaldır";
Blockly.Msg["LISTS_GET_INDEX_REMOVE_FIRST_TYPEBLOCK"] = "Remove First Item of List";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_REMOVE_FROM_END_TYPEBLOCK"] = "Remove Item From End of List";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_REMOVE_FROM_START_TYPEBLOCK"] = "Remove Item From Start of List";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_REMOVE_LAST_TYPEBLOCK"] = "Remove Last Item of List";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_REMOVE_RANDOM_TYPEBLOCK"] = "Remove Random Item of List";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_TAIL"] = "";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_FIRST"] = "Listedeki ilk öğeyi verir.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_FROM_END"] = "Listede belirli pozisyondaki bir öğeyi verir.#1 son öğedir.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_FROM_START"] = "Listede belirli pozisyondaki bir öğeyi verir.#1 ilk öğedir.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_LAST"] = "Listedeki son öğeyi verir.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_RANDOM"] = "Listedeki rastgele bir öğeyi verir.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST"] = "Kaldırır ve listedeki ilk öğeyi döndürür.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END"] = "Kaldırır ve listede belirtilen konumdaki bir ögeyi döndürür.  #1 son ögedir.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START"] = "Kaldırır ve listede belirtilen konumdaki bir öğeyi döndürür.  #1 son öğedir.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST"] = "Kaldırır ve listedeki son öğeyi döndürür.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM"] = "Kaldırır ve listedeki rastgele bir öğeyi verir.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST"] = "Listedeki ilk nesneyi kaldırır.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END"] = "Liste içerisinde , tanımlanan pozisyondaki bir öğeyi kaldırır . #1 son öğe dir .";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START"] = "Bir liste içerisinde , tanımlanan pozisyonda ki öğeyi kaldırır.#1 ilk öğedir.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST"] = "Listedeki son nesneyi kaldırır.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM"] = "Listedeki rastgele bir nesneyi kaldırır.";
Blockly.Msg["LISTS_GET_SUBLIST_END_FROM_END"] = "Sondan #'a kadar";
Blockly.Msg["LISTS_GET_SUBLIST_END_FROM_START"] = "#'a";
Blockly.Msg["LISTS_GET_SUBLIST_END_LAST"] = "Sona kadar";
Blockly.Msg["LISTS_GET_SUBLIST_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
Blockly.Msg["LISTS_GET_SUBLIST_START_FIRST"] = "ilk öğeden alt liste al";
Blockly.Msg["LISTS_GET_SUBLIST_START_FROM_END"] = "# işaretinden sonra gelen ifadeye göre  alt liste al , # sondan";
Blockly.Msg["LISTS_GET_SUBLIST_START_FROM_START"] = "# dan alt liste al";
Blockly.Msg["LISTS_GET_SUBLIST_TAIL"] = "";
Blockly.Msg["LISTS_GET_SUBLIST_TOOLTIP"] = "Listenin belirli bir kısmının kopyasını yaratır.";
Blockly.Msg["LISTS_GET_SUBLIST_TYPEBLOCK"] = "Get Sub-List";  // untranslated
Blockly.Msg["LISTS_INDEX_OF_FIRST"] = "Öğenin ilk varolduğu yeri bul";
Blockly.Msg["LISTS_INDEX_OF_FIRST_TYPEBLOCK"] = "Find First Occurrence Of Item";  // untranslated
Blockly.Msg["LISTS_INDEX_OF_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
Blockly.Msg["LISTS_INDEX_OF_LAST"] = "Öğenin son varolduğu yeri bul";
Blockly.Msg["LISTS_INDEX_OF_LAST_TYPEBLOCK"] = "Find Last Occurrence Of Item";  // untranslated
Blockly.Msg["LISTS_INDEX_OF_TOOLTIP"] = "Öğenin  listede ,  ilk ve son görüldüğü dizinleri döndürür . Öğe bulunmassa , 0 döndürür .";
Blockly.Msg["LISTS_INLIST"] = "Listede";
Blockly.Msg["LISTS_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
Blockly.Msg["LISTS_ISEMPTY_TITLE"] = "%1 boş";
Blockly.Msg["LISTS_ISEMPTY_TOOLTIP"] = "Eğer liste boş ise true döndürür .";
Blockly.Msg["LISTS_ISEMPTY_TYPEBLOCK"] = "Is List Empty?";  // untranslated
Blockly.Msg["LISTS_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
Blockly.Msg["LISTS_LENGTH_TITLE"] = "%1'in uzunluğu";
Blockly.Msg["LISTS_LENGTH_TOOLTIP"] = "Bir listenin uzunluğunu verir.";
Blockly.Msg["LISTS_LENGTH_TYPEBLOCK"] = "Length Of List";  // untranslated
Blockly.Msg["LISTS_REPEAT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg["LISTS_REPEAT_TITLE"] = "%1 nesnenin %2 kez tekrarlandığı bir liste yarat";
Blockly.Msg["LISTS_REPEAT_TOOLTIP"] = "Verilen bir değerin , belirli bir sayıda tekrarlanmasından oluşan bir liste yaratır .";
Blockly.Msg["LISTS_REPEAT_TYPEBLOCK"] = "Create List With Repeated Item";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_INPUT_TO"] = "olarak";
Blockly.Msg["LISTS_SET_INDEX_INSERT"] = "e yerleştir";
Blockly.Msg["LISTS_SET_INDEX_INSERT_FIRST_TYPEBLOCK"] = "Insert at Start of List";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_INSERT_FROM_END_TYPEBLOCK"] = "Insert at Position from End of List";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_INSERT_FROM_START_TYPEBLOCK"] = "Inserts at Position in List";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_INSERT_LAST_TYPEBLOCK"] = "Append to End of List";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_INSERT_RANDOM_TYPEBLOCK"] = "Insert At Random Location in List";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_SET"] = "yerleştir";
Blockly.Msg["LISTS_SET_INDEX_SET_FIRST_TYPEBLOCK"] = "Set First Item in List";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_SET_FROM_END_TYPEBLOCK"] = "Set Item at Position from End of List";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_SET_FROM_START_TYPEBLOCK"] = "Set Item at Position in List";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_SET_LAST_TYPEBLOCK"] = "Set Last Item in List";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_SET_RANDOM_TYPEBLOCK"] = "Set a Random Item in List";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST"] = "Nesneyi listenin başlangıcına ekler.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END"] = "Bir öğeyi , belirtilen yer pozisyonuna göre , listeye yerleştirir . #1 son öğedir .";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START"] = "Bir öğeyi belirtilen pozisyona göre listeye yerleştirir . #1 ilk öğedir .";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_LAST"] = "Öğeyi listenin sonuna ekle .";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM"] = "Bir öğeyi listeye rast gele ekler .";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_FIRST"] = "Bir listenin ilk öğesini yerleştirir .";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_FROM_END"] = "Bir öğeyi belirtilen yere göre listeye yerleştirir . #1 son öğedir .";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_FROM_START"] = "Bir öğeyi belirtilen yere göre listeye yerleştirir . #1 ilk öğedir .";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_LAST"] = "Bir listedeki son öğeyi yerleştirir .";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_RANDOM"] = "Listeye rast gele bir öğe yerleştirir .";
Blockly.Msg["LISTS_SPLIT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
Blockly.Msg["LISTS_SPLIT_LIST_FROM_TEXT"] = "make list from text";  // untranslated
Blockly.Msg["LISTS_SPLIT_LIST_FROM_TEXT_TYPEBLOCK"] = "Make List From Text";  // untranslated
Blockly.Msg["LISTS_SPLIT_TEXT_FROM_LIST"] = "make text from list";  // untranslated
Blockly.Msg["LISTS_SPLIT_TEXT_FROM_LIST_TYPEBLOCK"] = "Make Text From List";  // untranslated
Blockly.Msg["LISTS_SPLIT_TOOLTIP_JOIN"] = "Join a list of texts into one text, separated by a delimiter.";  // untranslated
Blockly.Msg["LISTS_SPLIT_TOOLTIP_SPLIT"] = "Split text into a list of texts, breaking at each delimiter.";  // untranslated
Blockly.Msg["LISTS_SPLIT_WITH_DELIMITER"] = "with delimiter";  // untranslated
Blockly.Msg["LOGIC_BOOLEAN_FALSE"] = "false = Olumsuz";
Blockly.Msg["LOGIC_BOOLEAN_FALSE_TYPEBLOCK"] = "False";  // untranslated
Blockly.Msg["LOGIC_BOOLEAN_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
Blockly.Msg["LOGIC_BOOLEAN_TOOLTIP"] = "Ya 'True' yada 'False' değerini verir.";
Blockly.Msg["LOGIC_BOOLEAN_TRUE"] = "Olumlu";
Blockly.Msg["LOGIC_BOOLEAN_TRUE_TYPEBLOCK"] = "True";  // untranslated
Blockly.Msg["LOGIC_COMPARE_HELPURL"] = "https://tr.wikipedia.org/wiki/E%C5%9Fitsizlikler";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_EQ"] = "Girilen iki değer birbirine eşitse \"True\" değerini verir.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_GT"] = "Girilen ilk değer ikinci değerden daha büyükse \"True\" değerini verir.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_GTE"] = "Girilen ilk değer ikinci değerden büyük veya eşitse \"True\" değerini verir.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_LT"] = "Girilen ilk değer ikinci değerden küçükse \"True\" değerini verir.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_LTE"] = "Girilen ilk değer ikinci değerden küçük veya eşitse \"True\" değerini verir.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_NEQ"] = "Girilen iki değerde birbirine eşit değilse \"True\" değerini verir.";
Blockly.Msg["LOGIC_COMPARE_TYPEBLOCK"] = "Logic Equal";  // untranslated
Blockly.Msg["LOGIC_NEGATE_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
Blockly.Msg["LOGIC_NEGATE_TITLE"] = "%1 değil";
Blockly.Msg["LOGIC_NEGATE_TOOLTIP"] = "Girilen değer yanlışsa \"True\" değerini verir.Girilen değer doğruysa \"False\" değerini verir.";
Blockly.Msg["LOGIC_NEGATE_TYPEBLOCK"] = "not";  // untranslated
Blockly.Msg["LOGIC_NULL"] = "sıfır";
Blockly.Msg["LOGIC_NULL_HELPURL"] = "https://en.wikipedia.org/wiki/Nullable_type";
Blockly.Msg["LOGIC_NULL_TOOLTIP"] = "sıfır verir.";
Blockly.Msg["LOGIC_NULL_TYPEBLOCK"] = "Null";  // untranslated
Blockly.Msg["LOGIC_OPERATION_AND"] = "ve";
Blockly.Msg["LOGIC_OPERATION_AND_TYPEBLOCK"] = "and";  // untranslated
Blockly.Msg["LOGIC_OPERATION_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
Blockly.Msg["LOGIC_OPERATION_OR"] = "veya";
Blockly.Msg["LOGIC_OPERATION_OR_TYPEBLOCK"] = "or";  // untranslated
Blockly.Msg["LOGIC_OPERATION_TOOLTIP_AND"] = "Girilen iki değerde doğruysa \"True\" değerini verir.";
Blockly.Msg["LOGIC_OPERATION_TOOLTIP_OR"] = "Girilen iki değerden en az biri doğruysa \"True\" değerini verir.";
Blockly.Msg["LOGIC_TERNARY_CONDITION"] = "test";
Blockly.Msg["LOGIC_TERNARY_HELPURL"] = "https://en.wikipedia.org/wiki/%3F:";
Blockly.Msg["LOGIC_TERNARY_IF_FALSE"] = "yanlış ise";
Blockly.Msg["LOGIC_TERNARY_IF_TRUE"] = "doğru ise";
Blockly.Msg["LOGIC_TERNARY_TOOLTIP"] = "'test'deki şartı test eder. Eğer şart doğru ise 'doğru' değeri döndürür, aksi halde 'yanlış' değeri döndürür.";
Blockly.Msg["LOGIC_TERNARY_TYPEBLOCK"] = "Test";  // untranslated
Blockly.Msg["LOGIC_THIS"] = "This";  // untranslated
Blockly.Msg["LOGIC_THIS_TYPEBLOCK"] = "This";  // untranslated
Blockly.Msg["MAPS_CREATE_EMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Maps#create-empty-Map";  // untranslated
Blockly.Msg["MAPS_CREATE_EMPTY_TITLE"] = "create empty map";  // untranslated
Blockly.Msg["MAPS_CREATE_EMPTY_TOOLTIP"] = "Returns a Map, of length 0, containing no data records";  // untranslated
Blockly.Msg["MAPS_CREATE_EMPTY_TYPEBLOCK"] = "Create Empty Map";  // untranslated
Blockly.Msg["MAPS_CREATE_HELPURL"] = "https://github.com/google/blockly/wiki/Maps#create-empty-Map";  // untranslated
Blockly.Msg["MAPS_CREATE_TITLE"] = "map key %1 as %2";  // untranslated
Blockly.Msg["MAPS_CREATE_TOOLTIP"] = "Returns a Map, of length 0, containing no data records";  // untranslated
Blockly.Msg["MAPS_CREATE_TYPEBLOCK"] = "Map Key";  // untranslated
Blockly.Msg["MAPS_CREATE_WITH_CONTAINER_TITLE_ADD"] = "Map";  // untranslated
Blockly.Msg["MAPS_CREATE_WITH_CONTAINER_TOOLTIP"] = "Add, remove, or reorder sections to reconfigure this Map block.";  // untranslated
Blockly.Msg["MAPS_CREATE_WITH_HELPURL"] = "https://github.com/google/blockly/wiki/Maps#create-Map-with";  // untranslated
Blockly.Msg["MAPS_CREATE_WITH_INPUT_WITH"] = "create map with";  // untranslated
Blockly.Msg["MAPS_CREATE_WITH_ITEM_TOOLTIP"] = "Add an item to the Map.";  // untranslated
Blockly.Msg["MAPS_CREATE_WITH_TOOLTIP"] = "Create a Map with any number of items.";  // untranslated
Blockly.Msg["MAPS_CREATE_WITH_TYPEBLOCK"] = "Create Map With";  // untranslated
Blockly.Msg["MAPS_GET_INDEX_FIRST"] = "first";  // untranslated
Blockly.Msg["MAPS_GET_INDEX_FROM_END"] = "# from end";  // untranslated
Blockly.Msg["MAPS_GET_INDEX_FROM_START"] = "#";  // untranslated
Blockly.Msg["MAPS_GET_INDEX_GET"] = "get";  // untranslated
Blockly.Msg["MAPS_GET_INDEX_GET_REMOVE"] = "get and remove";  // untranslated
Blockly.Msg["MAPS_GET_INDEX_GET_REMOVE_TYPEBLOCK"] = "Get and Remove Item From a Map";  // untranslated
Blockly.Msg["MAPS_GET_INDEX_GET_TYPEBLOCK"] = "Get Item From a Map";  // untranslated
Blockly.Msg["MAPS_GET_INDEX_LAST"] = "last";  // untranslated
Blockly.Msg["MAPS_GET_INDEX_REMOVE"] = "remove";  // untranslated
Blockly.Msg["MAPS_GET_INDEX_REMOVE_TYPEBLOCK"] = "Remove Item From a Map";  // untranslated
Blockly.Msg["MAPS_GET_INDEX_TAIL"] = "";  // untranslated
Blockly.Msg["MAPS_GET_INDEX_TOOLTIP_GET"] = "Returns the item at the specified position in a Map.";  // untranslated
Blockly.Msg["MAPS_GET_INDEX_TOOLTIP_GET_REMOVE"] = "Removes and returns the item at the specified position in a Map.";  // untranslated
Blockly.Msg["MAPS_GET_INDEX_TOOLTIP_REMOVE"] = "Removes the item at the specified position in a Map.";  // untranslated
Blockly.Msg["MAPS_INDEX_OF_FIRST"] = "find first occurrence of item";  // untranslated
Blockly.Msg["MAPS_INDEX_OF_FIRST_TYPEBLOCK"] = "Find First Occurrence Of Item";  // untranslated
Blockly.Msg["MAPS_INDEX_OF_HELPURL"] = "https://github.com/google/blockly/wiki/Maps#getting-items-from-a-Map";  // untranslated
Blockly.Msg["MAPS_INDEX_OF_LAST"] = "find last occurrence of item";  // untranslated
Blockly.Msg["MAPS_INDEX_OF_LAST_TYPEBLOCK"] = "Find Last Occurrence Of Item";  // untranslated
Blockly.Msg["MAPS_INDEX_OF_TOOLTIP"] = "Returns the index of the first/last occurrence of the item in the Map. Returns 0 if text is not found.";  // untranslated
Blockly.Msg["MAPS_INMAP"] = "in map";  // untranslated
Blockly.Msg["MAPS_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Maps#is-empty";  // untranslated
Blockly.Msg["MAPS_ISEMPTY_TITLE"] = "%1 is empty";  // untranslated
Blockly.Msg["MAPS_ISEMPTY_TOOLTIP"] = "Returns true if the Map is empty.";  // untranslated
Blockly.Msg["MAPS_ISEMPTY_TYPEBLOCK"] = "Is Map Empty?";  // untranslated
Blockly.Msg["MAPS_KEYS_TITLE"] = "get keys of %1";  // untranslated
Blockly.Msg["MAPS_KEYS_TYPEBLOCK"] = "Get Keys of Map";  // untranslated
Blockly.Msg["MAPS_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Maps#length-of";  // untranslated
Blockly.Msg["MAPS_LENGTH_TITLE"] = "size of %1";  // untranslated
Blockly.Msg["MAPS_LENGTH_TOOLTIP"] = "Returns the number of entries in a Map.";  // untranslated
Blockly.Msg["MAPS_LENGTH_TYPEBLOCK"] = "Size Of Map";  // untranslated
Blockly.Msg["MAPS_SET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Maps#in-Map--set";  // untranslated
Blockly.Msg["MAPS_SET_INDEX_INPUT_TO"] = "as";  // untranslated
Blockly.Msg["MAPS_SET_INDEX_INSERT"] = "insert at";  // untranslated
Blockly.Msg["MAPS_SET_INDEX_SET"] = "set";  // untranslated
Blockly.Msg["MAPS_SET_INDEX_TOOLTIP"] = "Sets the item at the specified position in a Map.";  // untranslated
Blockly.Msg["MAPS_SET_INDEX_TYPEBLOCK"] = "Set Item at Position in Map";  // untranslated
Blockly.Msg["MATH_ADDITION_SYMBOL"] = "+";
Blockly.Msg["MATH_ARITHMETIC_ADD_TYPEBLOCK"] = "+";  // untranslated
Blockly.Msg["MATH_ARITHMETIC_DIVIDE_TYPEBLOCK"] = "/";  // untranslated
Blockly.Msg["MATH_ARITHMETIC_HELPURL"] = "https://tr.wikipedia.org/wiki/Aritmetik";
Blockly.Msg["MATH_ARITHMETIC_MINUS_TYPEBLOCK"] = "-";  // untranslated
Blockly.Msg["MATH_ARITHMETIC_MULTIPLY_TYPEBLOCK"] = "*";  // untranslated
Blockly.Msg["MATH_ARITHMETIC_POWER_TYPEBLOCK"] = "^";  // untranslated
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_ADD"] = "İki rakamın toplamını döndür.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_DIVIDE"] = "İki sayının bölümünü döndür.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_MINUS"] = "İki sayını farkını döndür.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_MULTIPLY"] = "İki sayının çarpımını döndür.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_POWER"] = "İlk sayinin ikincinin kuvvetine yükseltilmişini döndür.";
Blockly.Msg["MATH_CHANGE_HELPURL"] = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
Blockly.Msg["MATH_CHANGE_TITLE"] = "%1'i %2 kadar değiştir";
Blockly.Msg["MATH_CHANGE_TOOLTIP"] = "'%1' değişkenine bir sayı ekle.";
Blockly.Msg["MATH_CHANGE_TYPEBLOCK"] = "Change Variable By Amount";  // untranslated
Blockly.Msg["MATH_CONSTANT_E_TYPEBLOCK"] = "Constant E";  // untranslated
Blockly.Msg["MATH_CONSTANT_GOLDEN_RATIO_TYPEBLOCK"] = "Constant Golden Ratio (φ)";  // untranslated
Blockly.Msg["MATH_CONSTANT_HELPURL"] = "https://en.wikipedia.org/wiki/Mathematical_constant";
Blockly.Msg["MATH_CONSTANT_INFINITY_TYPEBLOCK"] = "Constant Infinity (∞)";  // untranslated
Blockly.Msg["MATH_CONSTANT_PI_TYPEBLOCK"] = "Constant PI";  // untranslated
Blockly.Msg["MATH_CONSTANT_SQRT1_2_TYPEBLOCK"] = "Constant √ 1/2";  // untranslated
Blockly.Msg["MATH_CONSTANT_SQRT2_TYPEBLOCK"] = "Constant √ 2";  // untranslated
Blockly.Msg["MATH_CONSTANT_TOOLTIP"] = "Yaygın sabitlerden birini döndür:π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), or ∞ (sonsuz).";
Blockly.Msg["MATH_CONSTRAIN_HELPURL"] = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";  // untranslated
Blockly.Msg["MATH_CONSTRAIN_TITLE"] = "%1 i en düşük %2 en yüksek %3 ile sınırla";
Blockly.Msg["MATH_CONSTRAIN_TOOLTIP"] = "Bir sayıyı belirli iki sayı arasında sınırlandır(dahil).";
Blockly.Msg["MATH_CONSTRAIN_TYPEBLOCK"] = "Constrain Number Low High";  // untranslated
Blockly.Msg["MATH_DIVISION_SYMBOL"] = "÷";
Blockly.Msg["MATH_FORMAT_AS_DECIMAL_TITLE"] = "format as decimal  number %1 places %2";  // untranslated
Blockly.Msg["MATH_FORMAT_AS_DECIMAL_TOOLTIP"] = "Format this number";  // untranslated
Blockly.Msg["MATH_FORMAT_AS_DECIMAL_TYPEBLOCK"] = "Format as Decimal";  // untranslated
Blockly.Msg["MATH_IS_DIVISIBLE_BY"] = "bölünebilir";
Blockly.Msg["MATH_IS_DIVISIBLE_BY_TYPEBLOCK"] = "Number Is Divisible By";  // untranslated
Blockly.Msg["MATH_IS_EVEN"] = "çift";
Blockly.Msg["MATH_IS_EVEN_TYPEBLOCK"] = "Number Is Even";  // untranslated
Blockly.Msg["MATH_IS_NEGATIVE"] = "negatif";
Blockly.Msg["MATH_IS_NEGATIVE_TYPEBLOCK"] = "Number Is Negative";  // untranslated
Blockly.Msg["MATH_IS_ODD"] = "tek";
Blockly.Msg["MATH_IS_ODD_TYPEBLOCK"] = "Number Is Odd";  // untranslated
Blockly.Msg["MATH_IS_POSITIVE"] = "pozitif";
Blockly.Msg["MATH_IS_POSITIVE_TYPEBLOCK"] = "Number Is Positive";  // untranslated
Blockly.Msg["MATH_IS_PRIME"] = "asal";
Blockly.Msg["MATH_IS_PRIME_TYPEBLOCK"] = "Number Is Prime";  // untranslated
Blockly.Msg["MATH_IS_TOOLTIP"] = "Bir sayinin çift mi tek mi , tam mı, asal mı , pozitif mi, negatif mi, veya tam bir  sayıyla bölünebilirliğini kontrol et.'True' veya 'False' değerini döndür.";
Blockly.Msg["MATH_IS_WHOLE"] = "Bütün olduğunu";
Blockly.Msg["MATH_IS_WHOLE_TYPEBLOCK"] = "Number Is Whole";  // untranslated
Blockly.Msg["MATH_MODULO_HELPURL"] = "https://en.wikipedia.org/wiki/Modulo_operation";
Blockly.Msg["MATH_MODULO_TITLE"] = "%1 ÷ %2 nin kalanı";
Blockly.Msg["MATH_MODULO_TOOLTIP"] = "İki sayının bölümünden kalanı döndür.";
Blockly.Msg["MATH_MODULO_TYPEBLOCK"] = "Remainder of";  // untranslated
Blockly.Msg["MATH_MULTIPLICATION_SYMBOL"] = "x";
Blockly.Msg["MATH_NUMBER_HELPURL"] = "https://en.wikipedia.org/wiki/Number";
Blockly.Msg["MATH_NUMBER_TOOLTIP"] = "Bir sayı.";
Blockly.Msg["MATH_ONLIST_AVERAGE_TYPEBLOCK"] = "Average of List";  // untranslated
Blockly.Msg["MATH_ONLIST_HELPURL"] = "";
Blockly.Msg["MATH_ONLIST_MAX_TYPEBLOCK"] = "Max of List";  // untranslated
Blockly.Msg["MATH_ONLIST_MEDIAN_TYPEBLOCK"] = "Median of List";  // untranslated
Blockly.Msg["MATH_ONLIST_MIN_TYPEBLOCK"] = "Min of List";  // untranslated
Blockly.Msg["MATH_ONLIST_MODE_TYPEBLOCK"] = "Mode of List";  // untranslated
Blockly.Msg["MATH_ONLIST_OPERATOR_AVERAGE"] = "listenin ortalaması";
Blockly.Msg["MATH_ONLIST_OPERATOR_MAX"] = "en büyük sayı";
Blockly.Msg["MATH_ONLIST_OPERATOR_MEDIAN"] = "Listenin medyanı";
Blockly.Msg["MATH_ONLIST_OPERATOR_MIN"] = "Listenin en küçüğü";
Blockly.Msg["MATH_ONLIST_OPERATOR_MODE"] = "Listenin modları";
Blockly.Msg["MATH_ONLIST_OPERATOR_RANDOM"] = "Listenin rastgele öğesi";
Blockly.Msg["MATH_ONLIST_OPERATOR_STD_DEV"] = "Listenin standart sapması";
Blockly.Msg["MATH_ONLIST_OPERATOR_SUM"] = "Listenin toplamı";
Blockly.Msg["MATH_ONLIST_RANDOM_TYPEBLOCK"] = "Random Item of List";  // untranslated
Blockly.Msg["MATH_ONLIST_STD_DEV_TYPEBLOCK"] = "Standard Deviation of List";  // untranslated
Blockly.Msg["MATH_ONLIST_SUM_TYPEBLOCK"] = "Sum of List";  // untranslated
Blockly.Msg["MATH_ONLIST_TOOLTIP_AVERAGE"] = "Listedeki sayısal değerlerin ortalamasını (aritmetik anlamda) döndür.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MAX"] = "Listenin en büyüğünü döndür.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MEDIAN"] = "Listenin medyanını döndür.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MIN"] = "Listenin en küçüğünü döndür.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MODE"] = "Listede ki en yaygın öğe veya öğelerinin listesini döndür.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_RANDOM"] = "Listeden rastgele bir element döndür.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_STD_DEV"] = "Listenin standart sapmasını döndür.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_SUM"] = "Listede ki tüm sayıların toplamını döndür.";
Blockly.Msg["MATH_POWER_SYMBOL"] = "üst alma";
Blockly.Msg["MATH_RANDOM_FLOAT_HELPURL"] = "https://tr.wikipedia.org/wiki/Rastgele_say%C4%B1_%C3%BCretimi";
Blockly.Msg["MATH_RANDOM_FLOAT_TITLE_RANDOM"] = "Rast gele kesirli sayı , yada parça";
Blockly.Msg["MATH_RANDOM_FLOAT_TOOLTIP"] = "0.0(dahil) ve 1.0 (hariç) sayıları arasında bir sayı döndür .";
Blockly.Msg["MATH_RANDOM_FLOAT_TYPEBLOCK"] = "Random Fraction";  // untranslated
Blockly.Msg["MATH_RANDOM_INT_HELPURL"] = "https://tr.wikipedia.org/wiki/Rastgele_say%C4%B1_%C3%BCretimi";
Blockly.Msg["MATH_RANDOM_INT_TITLE"] = "%1 ile %2 arasında rastgele tam sayı üret";
Blockly.Msg["MATH_RANDOM_INT_TOOLTIP"] = "Herhangi iki sayı arasında , sayılar dahil olmak üzere , rastgele bir tam sayı döndür.";
Blockly.Msg["MATH_RANDOM_INT_TYPEBLOCK"] = "Random Integer";  // untranslated
Blockly.Msg["MATH_ROUND_HELPURL"] = "https://en.wikipedia.org/wiki/Rounding";  // untranslated
Blockly.Msg["MATH_ROUND_OPERATOR_ROUND"] = "Yuvarla";
Blockly.Msg["MATH_ROUND_OPERATOR_ROUNDDOWN"] = "aşağı yuvarla";
Blockly.Msg["MATH_ROUND_OPERATOR_ROUNDUP"] = "yukarı yuvarla";
Blockly.Msg["MATH_ROUND_ROUNDDOWN_TYPEBLOCK"] = "Round Down";  // untranslated
Blockly.Msg["MATH_ROUND_ROUNDUP_TYPEBLOCK"] = "Round Up";  // untranslated
Blockly.Msg["MATH_ROUND_ROUND_TYPEBLOCK"] = "Round";  // untranslated
Blockly.Msg["MATH_ROUND_TOOLTIP"] = "Bir sayı yı yukarı yada aşağı yuvarla .";
Blockly.Msg["MATH_SINGLE_HELPURL"] = "https://tr.wikipedia.org/wiki/Karek%C3%B6k";
Blockly.Msg["MATH_SINGLE_OP_ABSOLUTE"] = "Kesin";
Blockly.Msg["MATH_SINGLE_OP_ABSOLUTE_TYPEBLOCK"] = "Absolute Value";  // untranslated
Blockly.Msg["MATH_SINGLE_OP_NEG_TYPEBLOCK"] = "Negation";  // untranslated
Blockly.Msg["MATH_SINGLE_OP_ROOT"] = "Kare kök";
Blockly.Msg["MATH_SINGLE_OP_ROOT_TYPEBLOCK"] = "Square Root";  // untranslated
Blockly.Msg["MATH_SINGLE_TOOLTIP_ABS"] = "Bir sayının tam değerini döndür .";
Blockly.Msg["MATH_SINGLE_TOOLTIP_EXP"] = "Bir sayının e ' inci  kuvvetini döndür .";
Blockly.Msg["MATH_SINGLE_TOOLTIP_LN"] = "Bir sayının doğal logaritmasını döndür .";
Blockly.Msg["MATH_SINGLE_TOOLTIP_LOG10"] = "Bir sayının 10  temelinde logaritmasını döndür .";
Blockly.Msg["MATH_SINGLE_TOOLTIP_NEG"] = "Bir sayıyı geçersiz olarak döndür .";
Blockly.Msg["MATH_SINGLE_TOOLTIP_POW10"] = "Bir sayının 10. kuvvetini döndür .";
Blockly.Msg["MATH_SINGLE_TOOLTIP_ROOT"] = "Bir sayının karekökü nü döndür .";
Blockly.Msg["MATH_SUBTRACTION_SYMBOL"] = "tire";
Blockly.Msg["MATH_TRIG_ACOS"] = "akosünüs";
Blockly.Msg["MATH_TRIG_ACOS_TYPEBLOCK"] = "ACOS";  // untranslated
Blockly.Msg["MATH_TRIG_ASIN"] = "asinüs";
Blockly.Msg["MATH_TRIG_ASIN_TYPEBLOCK"] = "ASIN";  // untranslated
Blockly.Msg["MATH_TRIG_ATAN"] = "atanjant";
Blockly.Msg["MATH_TRIG_ATAN_TYPEBLOCK"] = "ATAN";  // untranslated
Blockly.Msg["MATH_TRIG_COS"] = "kosünüs";
Blockly.Msg["MATH_TRIG_COS_TYPEBLOCK"] = "COS";  // untranslated
Blockly.Msg["MATH_TRIG_HELPURL"] = "https://tr.wikipedia.org/wiki/Trigonometrik_fonksiyonlar";
Blockly.Msg["MATH_TRIG_SIN"] = "Sinüs";
Blockly.Msg["MATH_TRIG_SIN_TYPEBLOCK"] = "SIN";  // untranslated
Blockly.Msg["MATH_TRIG_TAN"] = "tanjant";
Blockly.Msg["MATH_TRIG_TAN_TYPEBLOCK"] = "TAN";  // untranslated
Blockly.Msg["MATH_TRIG_TOOLTIP_ACOS"] = "Bir sayının ters kosunusunu döndür .";
Blockly.Msg["MATH_TRIG_TOOLTIP_ASIN"] = "Bir sayının ters sinüsünü döndür .";
Blockly.Msg["MATH_TRIG_TOOLTIP_ATAN"] = "Bir sayının ters tanjantını döndür .";
Blockly.Msg["MATH_TRIG_TOOLTIP_COS"] = "Bir açının kosinüsünü döndür(radyan olarak değil).";
Blockly.Msg["MATH_TRIG_TOOLTIP_SIN"] = "Bir açının sinüsünü döndür(radyan olarak değil).";
Blockly.Msg["MATH_TRIG_TOOLTIP_TAN"] = "Bir açının tanjantını döndür(radyan olarak değil).";
Blockly.Msg["ME"] = "Beni";
Blockly.Msg["NEW_SCOPE_VARIABLE"] = "New Key...";  // untranslated
Blockly.Msg["NEW_SCOPE_VARIABLE_TITLE"] = "New Key name:";  // untranslated
Blockly.Msg["NEW_VARIABLE"] = "Yeni değişken...";
Blockly.Msg["NEW_VARIABLE_TITLE"] = "Yeni değişken ismi :";
Blockly.Msg["ORDINAL_NUMBER_SUFFIX"] = "";
Blockly.Msg["PROCEDURES_ALLOW_STATEMENTS"] = "Eğer ifadelerine izin ver";
Blockly.Msg["PROCEDURES_BEFORE_PARAMS"] = "ile :";
Blockly.Msg["PROCEDURES_CALLNORETURN_CALL"] = "";
Blockly.Msg["PROCEDURES_CALLNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg["PROCEDURES_CALLNORETURN_TOOLTIP"] = "Kullanıcı tanımlı fonksiyonu çalıştır '%1' .";
Blockly.Msg["PROCEDURES_CALLRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg["PROCEDURES_CALLRETURN_TOOLTIP"] = "Kullanıcı tanımlı fonksiyonu çalıştır '%1' ve çıktısını kullan .";
Blockly.Msg["PROCEDURES_CALL_BEFORE_PARAMS"] = "ile :";
Blockly.Msg["PROCEDURES_CREATE_DO"] = "'%1' oluştur";
Blockly.Msg["PROCEDURES_DEFFUNCTIONNORETURN_TITLE"] = "Function";  // untranslated
Blockly.Msg["PROCEDURES_DEFNORETURN_DO"] = "";
Blockly.Msg["PROCEDURES_DEFNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg["PROCEDURES_DEFNORETURN_PROCEDURE"] = "birşey yap";
Blockly.Msg["PROCEDURES_DEFNORETURN_TITLE"] = "e";
Blockly.Msg["PROCEDURES_DEFNORETURN_TOOLTIP"] = "Çıktı vermeyen bir fonksiyon yaratır .";
Blockly.Msg["PROCEDURES_DEFRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg["PROCEDURES_DEFRETURN_RETURN"] = "Geri dön";
Blockly.Msg["PROCEDURES_DEFRETURN_TOOLTIP"] = "Çıktı veren bir fonksiyon oluşturur.";
Blockly.Msg["PROCEDURES_DEF_DUPLICATE_WARNING"] = "Uyarı: Bu fonksiyon yinelenen parametreler vardır.";
Blockly.Msg["PROCEDURES_HIGHLIGHT_DEF"] = "Fonksiyon tanımı vurgulamak";
Blockly.Msg["PROCEDURES_IFRETURN_TOOLTIP"] = "Eğer değer doğruysa, ikinci değere geri dön.";
Blockly.Msg["PROCEDURES_IFRETURN_WARNING"] = "Uyarı: Bu blok yalnızca bir fonksiyon tanımı içinde kullanılır.";
Blockly.Msg["PROCEDURES_MUTATORARG_TITLE"] = "girdi adı:";
Blockly.Msg["PROCEDURES_MUTATORARG_TOOLTIP"] = "İşleve bir girdi ekleyin.";
Blockly.Msg["PROCEDURES_MUTATORCONTAINER_TITLE"] = "girdiler";
Blockly.Msg["PROCEDURES_MUTATORCONTAINER_TOOLTIP"] = "Bu işlevin girdilerini ekleyin, çıkarın, ya da yeniden sıralayın.";
Blockly.Msg["PROCEDURES_NEWTYPE"] = "New Type...";  // untranslated
Blockly.Msg["PROCEDURES_NEWTYPETITLE"] = "New Type name:";  // untranslated
Blockly.Msg["PROCEDURES_PARAM_NOTYPE"] = "with %1 %2%3";  // untranslated
Blockly.Msg["PROCEDURES_PARAM_WITH_TYPE"] = "with %1 as %2%3%4";  // untranslated
Blockly.Msg["REMOVE_COMMENT"] = "Yorumu Sil";
Blockly.Msg["RENAME_SCOPE_VARIABLE"] = "Rename Key...";  // untranslated
Blockly.Msg["RENAME_SCOPE_VARIABLE_TITLE"] = "Rename all '%1' Keys to:";  // untranslated
Blockly.Msg["RENAME_VARIABLE"] = "Değişkeni yeniden adlandır...";
Blockly.Msg["RENAME_VARIABLE_TITLE"] = "Tüm '%1' değişkenlerini yeniden isimlendir:";
Blockly.Msg["SCOPE_VARIABLES_SET"] = "set %1 : %2 to %3";  // untranslated
Blockly.Msg["TEXT_APPEND_APPENDTEXT"] = "Metin Ekle";
Blockly.Msg["TEXT_APPEND_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg["TEXT_APPEND_TO"] = "e";
Blockly.Msg["TEXT_APPEND_TOOLTIP"] = "Değişken '%1' e bazı metinler ekleyin.";
Blockly.Msg["TEXT_APPEND_TYPEBLOCK"] = "Append Text";  // untranslated
Blockly.Msg["TEXT_CHANGECASE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
Blockly.Msg["TEXT_CHANGECASE_LOWERCASE_TYPBLOCK"] = "Text to lower case";  // untranslated
Blockly.Msg["TEXT_CHANGECASE_OPERATOR_LOWERCASE"] = "küçük harf";
Blockly.Msg["TEXT_CHANGECASE_OPERATOR_TITLECASE"] = "Baş Harfler Büyük";
Blockly.Msg["TEXT_CHANGECASE_OPERATOR_UPPERCASE"] = "büyük harf";
Blockly.Msg["TEXT_CHANGECASE_TITLECASE_TYPBLOCK"] = "Text to Title Case";  // untranslated
Blockly.Msg["TEXT_CHANGECASE_TOOLTIP"] = "Metnin bir kopyasını farklı bir harf durumunda (HEPSİ BÜYÜK - hepsi küçük) getirir.";
Blockly.Msg["TEXT_CHANGECASE_UPPERCASE_TYPBLOCK"] = "Text to UPPER CASE";  // untranslated
Blockly.Msg["TEXT_CHARAT_FIRST"] = "İlk harfini al";
Blockly.Msg["TEXT_CHARAT_FROM_END"] = "# dan sona harfleri al";
Blockly.Msg["TEXT_CHARAT_FROM_START"] = "# harfini al";
Blockly.Msg["TEXT_CHARAT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
Blockly.Msg["TEXT_CHARAT_INPUT_INTEXT"] = "metinde";
Blockly.Msg["TEXT_CHARAT_LAST"] = "son harfi al";
Blockly.Msg["TEXT_CHARAT_RANDOM"] = "Rastgele bir harf al";
Blockly.Msg["TEXT_CHARAT_TAIL"] = "";
Blockly.Msg["TEXT_CHARAT_TOOLTIP"] = "Belirli pozisyonda ki bir harfi döndürür.";
Blockly.Msg["TEXT_COMMENT_TEXT"] = "Comment:";  // untranslated
Blockly.Msg["TEXT_COMMENT_TYPEBLOCK"] = "Comment";  // untranslated
Blockly.Msg["TEXT_CONTAINS_HELPURL"] = "http://appinventor.mit.edu/explore/ai2/support/blocks/text#contains";  // untranslated
Blockly.Msg["TEXT_CONTAINS_INPUT"] = "contains text %1 piece %2";  // untranslated
Blockly.Msg["TEXT_CONTAINS_TOOLTIP"] = "Tests whether the piece is contained in the text.";  // untranslated
Blockly.Msg["TEXT_CONTAINS_TYPEBLOCK"] = "Text Contains";  // untranslated
Blockly.Msg["TEXT_CREATE_JOIN_ITEM_TOOLTIP"] = "Metine bir öğe ekle.";
Blockly.Msg["TEXT_CREATE_JOIN_TITLE_JOIN"] = "Katıl";
Blockly.Msg["TEXT_CREATE_JOIN_TOOLTIP"] = "Bu metin bloğunu düzenlemek için bölüm ekle,sil veya yeniden görevlendir.";
Blockly.Msg["TEXT_GET_SUBSTRING_END_FROM_END"] = "Sondan # harfe";
Blockly.Msg["TEXT_GET_SUBSTRING_END_FROM_END_TYPEBLOCK"] = " To Letter # From End";  // untranslated
Blockly.Msg["TEXT_GET_SUBSTRING_END_FROM_START"] = "# harfe";
Blockly.Msg["TEXT_GET_SUBSTRING_END_FROM_START_TYPEBLOCK"] = " To Letter #";  // untranslated
Blockly.Msg["TEXT_GET_SUBSTRING_END_LAST"] = "son harfe";
Blockly.Msg["TEXT_GET_SUBSTRING_END_LAST_TYPEBLOCK"] = " To Last Letter";  // untranslated
Blockly.Msg["TEXT_GET_SUBSTRING_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
Blockly.Msg["TEXT_GET_SUBSTRING_INPUT_IN_TEXT"] = "metinde";
Blockly.Msg["TEXT_GET_SUBSTRING_START_FIRST"] = "ilk harften başlayarak alt-string alma";
Blockly.Msg["TEXT_GET_SUBSTRING_START_FIRST_TYPEBLOCK"] = "Get Substring From First Letter";  // untranslated
Blockly.Msg["TEXT_GET_SUBSTRING_START_FROM_END"] = "n inci harften sona kadar alt-string alma";
Blockly.Msg["TEXT_GET_SUBSTRING_START_FROM_END_TYPEBLOCK"] = "Get Substring From Letter # From End";  // untranslated
Blockly.Msg["TEXT_GET_SUBSTRING_START_FROM_START"] = "n inci harften alt-string alma";
Blockly.Msg["TEXT_GET_SUBSTRING_START_FROM_START_TYPEBLOCK"] = "Get Substring From Letter #";  // untranslated
Blockly.Msg["TEXT_GET_SUBSTRING_TAIL"] = "";
Blockly.Msg["TEXT_GET_SUBSTRING_TOOLTIP"] = "Metinin belirli bir kısmını döndürür.";
Blockly.Msg["TEXT_INDEXOF_FIRST_TYPEBLOCK"] = "Find First Occurrence of Text";  // untranslated
Blockly.Msg["TEXT_INDEXOF_HELPURL"] = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
Blockly.Msg["TEXT_INDEXOF_INPUT_INTEXT"] = "metinde";
Blockly.Msg["TEXT_INDEXOF_LAST_TYPEBLOCK"] = "Find Last Occurrence of Text";  // untranslated
Blockly.Msg["TEXT_INDEXOF_OPERATOR_FIRST"] = "Metnin ilk varolduğu yeri bul";
Blockly.Msg["TEXT_INDEXOF_OPERATOR_LAST"] = "Metnin son varolduğu yeri bul";
Blockly.Msg["TEXT_INDEXOF_TAIL"] = "";
Blockly.Msg["TEXT_INDEXOF_TOOLTIP"] = "İlk metnin ikinci metnin içindeki ilk ve son varoluşlarının indeksini döndürür.Metin bulunamadıysa 0 döndürür.";
Blockly.Msg["TEXT_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
Blockly.Msg["TEXT_ISEMPTY_TITLE"] = "%1 boş";
Blockly.Msg["TEXT_ISEMPTY_TOOLTIP"] = "Verilen metin boşsa true(doğru) değerini verir.";
Blockly.Msg["TEXT_ISEMPTY_TYPEBLOCK"] = "Text is Empty";  // untranslated
Blockly.Msg["TEXT_JOIN_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
Blockly.Msg["TEXT_JOIN_TITLE_CREATEWITH"] = "ile metin oluştur";
Blockly.Msg["TEXT_JOIN_TOOLTIP"] = "Herhangi bir sayıda ki öğeleri bir araya getirerek metnin bir parçasını oluştur.";
Blockly.Msg["TEXT_JOIN_TYPEBLOCK"] = "Create Text With";  // untranslated
Blockly.Msg["TEXT_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg["TEXT_LENGTH_TITLE"] = "%1 in uzunluğu";
Blockly.Msg["TEXT_LENGTH_TOOLTIP"] = "Yazı içerisinde verilen harflerin ( harf arasındaki boşluklar dahil) sayısını verir .";
Blockly.Msg["TEXT_LENGTH_TYPEBLOCK"] = "Length of Text";  // untranslated
Blockly.Msg["TEXT_PRINTF_CREATEWITH"] = "create text with";  // untranslated
Blockly.Msg["TEXT_PRINTF_HELPURL"] = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg["TEXT_PRINTF_TITLE"] = "printf format %1";  // untranslated
Blockly.Msg["TEXT_PRINTF_TOOLTIP"] = "Printf the specified text, number or other value.";  // untranslated
Blockly.Msg["TEXT_PRINTF_TYPEBLOCK"] = "Printf Text";  // untranslated
Blockly.Msg["TEXT_PRINT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg["TEXT_PRINT_TITLE"] = "%1 ' i Yaz";
Blockly.Msg["TEXT_PRINT_TOOLTIP"] = "Belirli bir metni,sayıyı veya başka bir değeri yaz.";
Blockly.Msg["TEXT_PRINT_TYPEBLOCK"] = "Print Text";  // untranslated
Blockly.Msg["TEXT_PROMPT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
Blockly.Msg["TEXT_PROMPT_NUMBER_TYPEBLOCK"] = "Prompt For Number With Message";  // untranslated
Blockly.Msg["TEXT_PROMPT_TEXT_TYPEBLOCK"] = "Prompt For Text With Message";  // untranslated
Blockly.Msg["TEXT_PROMPT_TOOLTIP_NUMBER"] = "Kullanıcıdan sayı al .";
Blockly.Msg["TEXT_PROMPT_TOOLTIP_TEXT"] = "Kullanıcıdan Yazım al .";
Blockly.Msg["TEXT_PROMPT_TYPE_NUMBER"] = "Kullanıcıdan sayı al , istek mesajı göstererek";
Blockly.Msg["TEXT_PROMPT_TYPE_TEXT"] = "Kullanıcıdan yazım al , istek mesajıyla";
Blockly.Msg["TEXT_SPRINTF_CREATEWITH"] = "create text with";  // untranslated
Blockly.Msg["TEXT_SPRINTF_HELPURL"] = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg["TEXT_SPRINTF_TITLE"] = "sprintf format %1";  // untranslated
Blockly.Msg["TEXT_SPRINTF_TOOLTIP"] = "Sprintf the specified text, number or other value.";  // untranslated
Blockly.Msg["TEXT_SPRINTF_TYPEBLOCK"] = "Sprintf Text";  // untranslated
Blockly.Msg["TEXT_TEXT_HELPURL"] = "https://en.wikipedia.org/wiki/String_(computer_science)";
Blockly.Msg["TEXT_TEXT_TOOLTIP"] = "Metnin bir harfi,kelimesi veya satırı.";
Blockly.Msg["TEXT_TOOLTIP_TYPE_JAVA"] = "Insert arbitrary Java code";  // untranslated
Blockly.Msg["TEXT_TOOLTIP_TYPE_PYTHON"] = "Insert arbitrary Python code";  // untranslated
Blockly.Msg["TEXT_TRIM_BOTH_TYPEBLOCK"] = "Trim Spaces From Both Sides Of Text";  // untranslated
Blockly.Msg["TEXT_TRIM_HELPURL"] = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
Blockly.Msg["TEXT_TRIM_LEFT_TYPEBLOCK"] = "Trim Spaces From Left Side Of Text";  // untranslated
Blockly.Msg["TEXT_TRIM_OPERATOR_BOTH"] = "iki tarafından da boşlukları temizle";
Blockly.Msg["TEXT_TRIM_OPERATOR_LEFT"] = "solundan boşlukları temizle";
Blockly.Msg["TEXT_TRIM_OPERATOR_RIGHT"] = "sağından boşlukları temizle";
Blockly.Msg["TEXT_TRIM_RIGHT_TYPEBLOCK"] = "Trim Spaces From Right Side Of Text";  // untranslated
Blockly.Msg["TEXT_TRIM_TOOLTIP"] = "Metnin bir veya her iki sondan da boşlukları silinmiş şekilde kopyasını verir.";
Blockly.Msg["TEXT_TYPE_JAVA"] = "insert java code";  // untranslated
Blockly.Msg["TEXT_TYPE_JAVA_TYPEBLOCK"] = "insert java code";  // untranslated
Blockly.Msg["TEXT_TYPE_PYTHON"] = "insert python code";  // untranslated
Blockly.Msg["TEXT_TYPE_PYTHON_TYPEBLOCK"] = "insert python code";  // untranslated
Blockly.Msg["TODAY"] = "Bugün";
Blockly.Msg["VARIABLES_DEFAULT_NAME"] = "öge";
Blockly.Msg["VARIABLES_GET_CREATE_SET"] = "'set %1' oluştur";
Blockly.Msg["VARIABLES_GET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
Blockly.Msg["VARIABLES_GET_TOOLTIP"] = "Bu değişkenin değerini verir.";
Blockly.Msg["VARIABLES_SET"] = "Atamak %1 e %2";
Blockly.Msg["VARIABLES_SET_CREATE_GET"] = "'get %1' oluştur";
Blockly.Msg["VARIABLES_SET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg["VARIABLES_SET_TOOLTIP"] = "Bu değişkeni girilen değere eşitler.";
Blockly.Msg["CONTROLS_FOREACH_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["CONTROLS_FOR_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["CONTROLS_IF_ELSEIF_TITLE_ELSEIF"] = Blockly.Msg["CONTROLS_IF_MSG_ELSEIF"];
Blockly.Msg["CONTROLS_IF_ELSE_TITLE_ELSE"] = Blockly.Msg["CONTROLS_IF_MSG_ELSE"];
Blockly.Msg["CONTROLS_IF_IF_TITLE_IF"] = Blockly.Msg["CONTROLS_IF_MSG_IF"];
Blockly.Msg["CONTROLS_IF_MSG_THEN"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["CONTROLS_WHILEUNTIL_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["LISTS_CREATE_WITH_ITEM_TITLE"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
Blockly.Msg["LISTS_GET_INDEX_HELPURL"] = Blockly.Msg["LISTS_INDEX_OF_HELPURL"];
Blockly.Msg["LISTS_GET_INDEX_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["LISTS_GET_SUBLIST_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["LISTS_INDEX_OF_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["LISTS_SET_INDEX_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["MAPS_CREATE_WITH_ITEM_TITLE"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
Blockly.Msg["MAPS_GET_INDEX_HELPURL"] = Blockly.Msg["MAPS_INDEX_OF_HELPURL"];
Blockly.Msg["MAPS_GET_INDEX_INPUT_IN_MAP"] = Blockly.Msg["MAPS_INMAP"];
Blockly.Msg["MAPS_INDEX_OF_INPUT_IN_MAP"] = Blockly.Msg["MAPS_INMAP"];
Blockly.Msg["MAPS_SET_INDEX_INPUT_IN_MAP"] = Blockly.Msg["MAPS_INMAP"];
Blockly.Msg["MATH_CHANGE_TITLE_ITEM"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
Blockly.Msg["PROCEDURES_CALLRETURN_CALL"] = Blockly.Msg["PROCEDURES_CALLNORETURN_CALL"];
Blockly.Msg["PROCEDURES_DEFRETURN_DO"] = Blockly.Msg["PROCEDURES_DEFNORETURN_DO"];
Blockly.Msg["PROCEDURES_DEFRETURN_PROCEDURE"] = Blockly.Msg["PROCEDURES_DEFNORETURN_PROCEDURE"];
Blockly.Msg["PROCEDURES_DEFRETURN_TITLE"] = Blockly.Msg["PROCEDURES_DEFNORETURN_TITLE"];
Blockly.Msg["TEXT_APPEND_VARIABLE"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
Blockly.Msg["TEXT_CREATE_JOIN_ITEM_TITLE_ITEM"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];

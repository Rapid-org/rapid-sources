// This file was automatically generated.  Do not modify.

'use strict';

Blockly.Msg["ADD_COMMENT"] = "Добавить комментарий";
Blockly.Msg["AUTH"] = "Пожалуйста, авторизуйте это приложение, чтоб можно было сохранять вашу работу и чтобы дать возможность вам делиться ей.";
Blockly.Msg["CHANGE_VALUE_TITLE"] = "Измените значение:";
Blockly.Msg["CHAT"] = "Общайтесь со своим коллегой, печатая в этом поле!";
Blockly.Msg["CLEAN_UP"] = "Убрать блоки";
Blockly.Msg["CLICK_ADD_TOOLTIP"] = "Add an element";  // untranslated
Blockly.Msg["CLICK_REMOVE_TOOLTIP"] = "Remove this element";  // untranslated
Blockly.Msg["COLLAPSE_ALL"] = "Свернуть блоки";
Blockly.Msg["COLLAPSE_BLOCK"] = "Свернуть блок";
Blockly.Msg["COLOUR_BLEND_COLOUR1"] = "цвет 1";
Blockly.Msg["COLOUR_BLEND_COLOUR2"] = "цвет 2";
Blockly.Msg["COLOUR_BLEND_HELPURL"] = "http://meyerweb.com/eric/tools/color-blend/";  // untranslated
Blockly.Msg["COLOUR_BLEND_RATIO"] = "доля цвета 1";
Blockly.Msg["COLOUR_BLEND_TITLE"] = "смешать";
Blockly.Msg["COLOUR_BLEND_TOOLTIP"] = "Смешивает два цвета в заданном соотношении (0.0 - 1.0).";
Blockly.Msg["COLOUR_BLEND_TYPEBLOCK"] = "Blend Colour";  // untranslated
Blockly.Msg["COLOUR_HEX"] = "hex";  // untranslated
Blockly.Msg["COLOUR_HEX_TO_DECIMAL_TYPEBLOCK"] = "to decimal";  // untranslated
Blockly.Msg["COLOUR_PICKER_HELPURL"] = "https://ru.wikipedia.org/wiki/Цвет";
Blockly.Msg["COLOUR_PICKER_TOOLTIP"] = "Выберите цвет из палитры.";
Blockly.Msg["COLOUR_PICKER_TYPEBLOCK"] = "Choose Colour";  // untranslated
Blockly.Msg["COLOUR_RANDOM_HELPURL"] = "http://randomcolour.com";  // untranslated
Blockly.Msg["COLOUR_RANDOM_TITLE"] = "случайный цвет";
Blockly.Msg["COLOUR_RANDOM_TOOLTIP"] = "Выбирает цвет случайным образом.";
Blockly.Msg["COLOUR_RANDOM_TYPEBLOCK"] = "Random Colour";  // untranslated
Blockly.Msg["COLOUR_RGB_BLUE"] = "синего";
Blockly.Msg["COLOUR_RGB_GREEN"] = "зелёного";
Blockly.Msg["COLOUR_RGB_HELPURL"] = "http://www.december.com/html/spec/colorper.html";  // untranslated
Blockly.Msg["COLOUR_RGB_RED"] = "красного";
Blockly.Msg["COLOUR_RGB_TITLE"] = "цвет из";
Blockly.Msg["COLOUR_RGB_TOOLTIP"] = "Создаёт цвет с указанной пропорцией  красного, зеленого и синего.  Все значения должны быть между 0 и 100.";
Blockly.Msg["COLOUR_RGB_TYPEBLOCK"] = "Colour with";  // untranslated
Blockly.Msg["COLOUR_TO_DECIMAL_BLOCK_TITLE"] = "to decimal";  // untranslated
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_BREAK_TYPEBLOCK"] = "Break Loop";  // untranslated
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_CONTINUE_TYPEBLOCK"] = "Continue Loop";  // untranslated
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK"] = "выйти из цикла";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE"] = "перейти к следующему шагу цикла";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK"] = "Прерывает этот цикл.";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE"] = "Пропускает остаток цикла и переходит к следующему шагу.";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_WARNING"] = "Предупреждение: этот блок может использоваться только внутри цикла.";
Blockly.Msg["CONTROLS_FOREACH_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
Blockly.Msg["CONTROLS_FOREACH_KEY_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
Blockly.Msg["CONTROLS_FOREACH_KEY_TITLE"] = "for each key %1 in map %2";  // untranslated
Blockly.Msg["CONTROLS_FOREACH_KEY_TYPEBLOCK"] = "For Each Key In Map";  // untranslated
Blockly.Msg["CONTROLS_FOREACH_TITLE"] = "для каждого элемента %1 в списке %2";
Blockly.Msg["CONTROLS_FOREACH_TOOLTIP"] = "Для каждого элемента в списке, присваивает переменной '%1' значение элемента  и выполняет указанные  команды.";
Blockly.Msg["CONTROLS_FOREACH_TYPEBLOCK"] = "For Each Item In List";  // untranslated
Blockly.Msg["CONTROLS_FOR_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
Blockly.Msg["CONTROLS_FOR_TITLE"] = "цикл по %1 от %2 до %3 с шагом %4";
Blockly.Msg["CONTROLS_FOR_TOOLTIP"] = "Присваивает переменной '%1' значения от начального до конечного с заданным шагом и выполняет указанные команды.";
Blockly.Msg["CONTROLS_FOR_TYPEBLOCK"] = "Count With From To By";  // untranslated
Blockly.Msg["CONTROLS_IF_ELSEIF_TOOLTIP"] = "Добавляет условие к блоку \"если\"";
Blockly.Msg["CONTROLS_IF_ELSE_TOOLTIP"] = "Добавить заключительный подблок для случая, когда все условия ложны.";
Blockly.Msg["CONTROLS_IF_ELSE_TYPEBLOCK"] = "If Else";  // untranslated
Blockly.Msg["CONTROLS_IF_ELSIF_ELSE_TYPEBLOCK"] = "If Else If Else";  // untranslated
Blockly.Msg["CONTROLS_IF_ELSIF_TYPEBLOCK"] = "If Else If";  // untranslated
Blockly.Msg["CONTROLS_IF_HELPURL"] = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
Blockly.Msg["CONTROLS_IF_IF_TOOLTIP"] = "Добавьте, удалите, переставьте фрагменты для переделки блока \"если\".";
Blockly.Msg["CONTROLS_IF_MSG_ELSE"] = "иначе";
Blockly.Msg["CONTROLS_IF_MSG_ELSEIF"] = "иначе если";
Blockly.Msg["CONTROLS_IF_MSG_IF"] = "если";
Blockly.Msg["CONTROLS_IF_TOOLTIP_1"] = "Если условие истинно, выполняет команды.";
Blockly.Msg["CONTROLS_IF_TOOLTIP_2"] = "Если условие истинно, выполняет первый блок команд. Иначе выполняется второй блок команд.";
Blockly.Msg["CONTROLS_IF_TOOLTIP_3"] = "Если первое условие истинно, то выполняет первый блок команд. Иначе, если второе условие истинно, выполняет второй блок команд.";
Blockly.Msg["CONTROLS_IF_TOOLTIP_4"] = "Если первое условие истинно, то выполняет первый блок команд.  В противном случае, если второе условие истинно, выполняет второй блок команд.  Если ни одно из условий не истинно, выполняет последний блок команд.";
Blockly.Msg["CONTROLS_IF_TYPEBLOCK"] = "If";  // untranslated
Blockly.Msg["CONTROLS_REPEAT_HELPURL"] = "https://ru.wikipedia.org/wiki/Цикл_(программирование)";
Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"] = "выполнить";
Blockly.Msg["CONTROLS_REPEAT_TITLE"] = "повторить %1 раз";
Blockly.Msg["CONTROLS_REPEAT_TITLE_REPEAT"] = "repeat";  // untranslated
Blockly.Msg["CONTROLS_REPEAT_TITLE_TIMES"] = "times";  // untranslated
Blockly.Msg["CONTROLS_REPEAT_TOOLTIP"] = "Выполняет некоторые команды несколько раз.";
Blockly.Msg["CONTROLS_REPEAT_TYPEBLOCK"] = "Repeat Times";  // untranslated
Blockly.Msg["CONTROLS_WHILEUNTIL_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
Blockly.Msg["CONTROLS_WHILEUNTIL_OPERATOR_UNTIL"] = "повторять, пока не";
Blockly.Msg["CONTROLS_WHILEUNTIL_OPERATOR_WHILE"] = "повторять, пока";
Blockly.Msg["CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL"] = "Пока значение ложно, выполняет команды";
Blockly.Msg["CONTROLS_WHILEUNTIL_TOOLTIP_WHILE"] = "Пока значение истинно, выполняет команды.";
Blockly.Msg["CONTROLS_WHILEUNTIL_UNTIL_TYPEBLOCK"] = "Repeat Unitl";  // untranslated
Blockly.Msg["CONTROLS_WHILEUNTIL_WHILE_TYPEBLOCK"] = "Repeat While";  // untranslated
Blockly.Msg["DELETE_ALL_BLOCKS"] = "Delete All Blocks";  // untranslated
Blockly.Msg["DELETE_BLOCK"] = "Удалить блок";
Blockly.Msg["DELETE_X_BLOCKS"] = "Удалить %1 блоков";
Blockly.Msg["DISABLE_BLOCK"] = "Отключить блок";
Blockly.Msg["DUPLICATE_BLOCK"] = "Скопировать";
Blockly.Msg["ENABLE_BLOCK"] = "Включить блок";
Blockly.Msg["EXPAND_ALL"] = "Развернуть блоки";
Blockly.Msg["EXPAND_BLOCK"] = "Развернуть блок";
Blockly.Msg["EXTERNAL_INPUTS"] = "Вставки снаружи";
Blockly.Msg["HELP"] = "Справка";
Blockly.Msg["IMPORT_JAR"] = "import jar %1 %2 package %3 class %4 method %5 %6";  // untranslated
Blockly.Msg["IMPORT_JAR_GET"] = "Create 'get %1'";  // untranslated
Blockly.Msg["IMPORT_JAR_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg["IMPORT_JAR_TOOLTIP"] = "Sets this variable to be equal to the input.";  // untranslated
Blockly.Msg["IMPORT_JAR_TYPEBLOCK"] = "insert python code";  // untranslated
Blockly.Msg["INITIALIZE_GLOBAL_VARIABLE"] = "Initialize global";  // untranslated
Blockly.Msg["INITIALIZE_LOCAL_VARIABLE"] = "Initialize local";  // untranslated
Blockly.Msg["INITIALIZE_VARIABLE"] = "Initialize %1 as %2 with %3";  // untranslated
Blockly.Msg["INLINE_INPUTS"] = "Вставки внутри";
Blockly.Msg["LISTS_CREATE_EMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
Blockly.Msg["LISTS_CREATE_EMPTY_TITLE"] = "создать пустой список";
Blockly.Msg["LISTS_CREATE_EMPTY_TOOLTIP"] = "Возвращает список длины 0, не содержащий данных";
Blockly.Msg["LISTS_CREATE_EMPTY_TYPEBLOCK"] = "Create Empty List";  // untranslated
Blockly.Msg["LISTS_CREATE_WITH_CONTAINER_TITLE_ADD"] = "список";
Blockly.Msg["LISTS_CREATE_WITH_CONTAINER_TOOLTIP"] = "Добавьте, удалите, переставьте элементы для переделки блока списка.";
Blockly.Msg["LISTS_CREATE_WITH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";
Blockly.Msg["LISTS_CREATE_WITH_INPUT_WITH"] = "создать список из";
Blockly.Msg["LISTS_CREATE_WITH_ITEM_TOOLTIP"] = "Добавляет элемент к списку.";
Blockly.Msg["LISTS_CREATE_WITH_TOOLTIP"] = "Создаёт список с любым числом элементов.";
Blockly.Msg["LISTS_CREATE_WITH_TYPEBLOCK"] = "Create List With";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_FIRST"] = "первый";
Blockly.Msg["LISTS_GET_INDEX_FROM_END"] = "№ с конца";
Blockly.Msg["LISTS_GET_INDEX_FROM_START"] = "#";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_GET"] = "взять";
Blockly.Msg["LISTS_GET_INDEX_GET_FIRST_TYPEBLOCK"] = "Get First Item of List";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_GET_FROM_END_TYPEBLOCK"] = "Get Item From End of List";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_GET_FROM_START_TYPEBLOCK"] = "Get Item From Start of List";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_GET_LAST_TYPEBLOCK"] = "Get Last Item of List";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_GET_RANDOM_TYPEBLOCK"] = "Get Random Item of List";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_GET_REMOVE"] = "взять и удалить";
Blockly.Msg["LISTS_GET_INDEX_GET_REMOVE_FIRST_TYPEBLOCK"] = "Get and Remove First Item of List";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_GET_REMOVE_FROM_END_TYPEBLOCK"] = "Get and Remove Item From End of List";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_GET_REMOVE_FROM_START_TYPEBLOCK"] = "Get and Remove Item From Start of List";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_GET_REMOVE_LAST_TYPEBLOCK"] = "Get and Remove Last Item of List";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_GET_REMOVE_RANDOM_TYPEBLOCK"] = "Get and Remove Random Item of List";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_LAST"] = "последний";
Blockly.Msg["LISTS_GET_INDEX_RANDOM"] = "произвольный";
Blockly.Msg["LISTS_GET_INDEX_REMOVE"] = "удалить";
Blockly.Msg["LISTS_GET_INDEX_REMOVE_FIRST_TYPEBLOCK"] = "Remove First Item of List";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_REMOVE_FROM_END_TYPEBLOCK"] = "Remove Item From End of List";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_REMOVE_FROM_START_TYPEBLOCK"] = "Remove Item From Start of List";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_REMOVE_LAST_TYPEBLOCK"] = "Remove Last Item of List";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_REMOVE_RANDOM_TYPEBLOCK"] = "Remove Random Item of List";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_TAIL"] = "";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_FIRST"] = "Возвращает первый элемент списка.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_FROM_END"] = "Возвращает элемент в указанной позиции списка (№1 - последний элемент).";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_FROM_START"] = "Возвращает элемент в указанной позиции списка (№1 - первый элемент).";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_LAST"] = "Возвращает последний элемент списка.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_RANDOM"] = "Возвращает случайный элемент списка.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST"] = "Удаляет и возвращает первый элемент списка.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END"] = "Удаляет и возвращает элемент в указанной позиции списка (№1 -  последний элемент).";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START"] = "Удаляет и возвращает элемент в указанной позиции списка (№1 - первый элемент).";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST"] = "Удаляет и возвращает последний элемент списка.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM"] = "Удаляет и возвращает случайный элемент списка.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST"] = "Удаляет первый элемент списка.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END"] = "Удаляет элемент в указанной позиции списка (№1 - последний элемент).";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START"] = "Удаляет элемент в указанной позиции списка (№1 - первый элемент).";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST"] = "Удаляет последний элемент списка.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM"] = "Удаляет случайный элемент списка.";
Blockly.Msg["LISTS_GET_SUBLIST_END_FROM_END"] = "по № с конца";
Blockly.Msg["LISTS_GET_SUBLIST_END_FROM_START"] = "по №";
Blockly.Msg["LISTS_GET_SUBLIST_END_LAST"] = "по последний";
Blockly.Msg["LISTS_GET_SUBLIST_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
Blockly.Msg["LISTS_GET_SUBLIST_START_FIRST"] = "взять подсписок с первого";
Blockly.Msg["LISTS_GET_SUBLIST_START_FROM_END"] = "взять подсписок с № с конца";
Blockly.Msg["LISTS_GET_SUBLIST_START_FROM_START"] = "взять подсписок с №";
Blockly.Msg["LISTS_GET_SUBLIST_TAIL"] = "";  // untranslated
Blockly.Msg["LISTS_GET_SUBLIST_TOOLTIP"] = "Создаёт копию указанной части списка.";
Blockly.Msg["LISTS_GET_SUBLIST_TYPEBLOCK"] = "Get Sub-List";  // untranslated
Blockly.Msg["LISTS_INDEX_OF_FIRST"] = "найти первое вхождение элемента";
Blockly.Msg["LISTS_INDEX_OF_FIRST_TYPEBLOCK"] = "Find First Occurrence Of Item";  // untranslated
Blockly.Msg["LISTS_INDEX_OF_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
Blockly.Msg["LISTS_INDEX_OF_LAST"] = "найти последнее вхождение элемента";
Blockly.Msg["LISTS_INDEX_OF_LAST_TYPEBLOCK"] = "Find Last Occurrence Of Item";  // untranslated
Blockly.Msg["LISTS_INDEX_OF_TOOLTIP"] = "Возвращает номер позиции первого/последнего вхождения элемента в списке. Возвращает 0, если элемент не найден.";
Blockly.Msg["LISTS_INLIST"] = "в списке";
Blockly.Msg["LISTS_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
Blockly.Msg["LISTS_ISEMPTY_TITLE"] = "%1 пуст";
Blockly.Msg["LISTS_ISEMPTY_TOOLTIP"] = "Возвращает значение истина, если список пуст.";
Blockly.Msg["LISTS_ISEMPTY_TYPEBLOCK"] = "Is List Empty?";  // untranslated
Blockly.Msg["LISTS_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
Blockly.Msg["LISTS_LENGTH_TITLE"] = "длина %1";
Blockly.Msg["LISTS_LENGTH_TOOLTIP"] = "Возвращает длину списка.";
Blockly.Msg["LISTS_LENGTH_TYPEBLOCK"] = "Length Of List";  // untranslated
Blockly.Msg["LISTS_REPEAT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg["LISTS_REPEAT_TITLE"] = "создать список из элемента %1, повторяющегося %2 раз";
Blockly.Msg["LISTS_REPEAT_TOOLTIP"] = "Создаёт список, состоящий из заданного числа копий элемента.";
Blockly.Msg["LISTS_REPEAT_TYPEBLOCK"] = "Create List With Repeated Item";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_INPUT_TO"] = "=";
Blockly.Msg["LISTS_SET_INDEX_INSERT"] = "вставить в";
Blockly.Msg["LISTS_SET_INDEX_INSERT_FIRST_TYPEBLOCK"] = "Insert at Start of List";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_INSERT_FROM_END_TYPEBLOCK"] = "Insert at Position from End of List";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_INSERT_FROM_START_TYPEBLOCK"] = "Inserts at Position in List";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_INSERT_LAST_TYPEBLOCK"] = "Append to End of List";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_INSERT_RANDOM_TYPEBLOCK"] = "Insert At Random Location in List";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_SET"] = "присвоить";
Blockly.Msg["LISTS_SET_INDEX_SET_FIRST_TYPEBLOCK"] = "Set First Item in List";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_SET_FROM_END_TYPEBLOCK"] = "Set Item at Position from End of List";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_SET_FROM_START_TYPEBLOCK"] = "Set Item at Position in List";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_SET_LAST_TYPEBLOCK"] = "Set Last Item in List";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_SET_RANDOM_TYPEBLOCK"] = "Set a Random Item in List";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST"] = "Вставляет элемент в начало списка.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END"] = "Вставляет элемент в указанной позиции списка (№1 - последний элемент).";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START"] = "Вставляет элемент в указанной позиции списка (№1 - первый элемент).";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_LAST"] = "Добавляет элемент в конец списка.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM"] = "Вставляет элемент в случайное место в списке.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_FIRST"] = "Присваивает значение первому элементу списка.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_FROM_END"] = "Присваивает значение элементу в указанной позиции списка (№1 - последний элемент).";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_FROM_START"] = "Присваивает значение элементу в указанной позиции списка (№1 - первый элемент).";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_LAST"] = "Присваивает значение последнему элементу списка.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_RANDOM"] = "Присваивает значение случайному элементу списка.";
Blockly.Msg["LISTS_SPLIT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";
Blockly.Msg["LISTS_SPLIT_LIST_FROM_TEXT"] = "сделать список из текста";
Blockly.Msg["LISTS_SPLIT_LIST_FROM_TEXT_TYPEBLOCK"] = "Make List From Text";  // untranslated
Blockly.Msg["LISTS_SPLIT_TEXT_FROM_LIST"] = "собрать текст из списка";
Blockly.Msg["LISTS_SPLIT_TEXT_FROM_LIST_TYPEBLOCK"] = "Make Text From List";  // untranslated
Blockly.Msg["LISTS_SPLIT_TOOLTIP_JOIN"] = "Соединяет сптсок текстов в один текст с разделителями.";
Blockly.Msg["LISTS_SPLIT_TOOLTIP_SPLIT"] = "Разбивает текст в список текстов, по разделителям.";
Blockly.Msg["LISTS_SPLIT_WITH_DELIMITER"] = "с разделителем";
Blockly.Msg["LOGIC_BOOLEAN_FALSE"] = "ложь";
Blockly.Msg["LOGIC_BOOLEAN_FALSE_TYPEBLOCK"] = "False";  // untranslated
Blockly.Msg["LOGIC_BOOLEAN_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
Blockly.Msg["LOGIC_BOOLEAN_TOOLTIP"] = "Возвращает значение истина или ложь.";
Blockly.Msg["LOGIC_BOOLEAN_TRUE"] = "истина";
Blockly.Msg["LOGIC_BOOLEAN_TRUE_TYPEBLOCK"] = "True";  // untranslated
Blockly.Msg["LOGIC_COMPARE_HELPURL"] = "https://ru.wikipedia.org/wiki/%D0%9D%D0%B5%D1%80%D0%B0%D0%B2%D0%B5%D0%BD%D1%81%D1%82%D0%B2%D0%BE";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_EQ"] = "Возвращает значение истина, если вставки равны.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_GT"] = "Возвращает значение истина, если первая вставка больше второй.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_GTE"] = "Возвращает значение истина, если первая вставка больше или равна  второй.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_LT"] = "Возвращает значение истина, если первая вставка меньше второй.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_LTE"] = "Возвращает значение истина, если первая вставка меньше или равна  второй.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_NEQ"] = "Возвращает значение истина, если вставки не равны.";
Blockly.Msg["LOGIC_COMPARE_TYPEBLOCK"] = "Logic Equal";  // untranslated
Blockly.Msg["LOGIC_NEGATE_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
Blockly.Msg["LOGIC_NEGATE_TITLE"] = "не %1";
Blockly.Msg["LOGIC_NEGATE_TOOLTIP"] = "Возвращает значение истина, если вставка ложна.  Возвращает значение ложь, если вставка истинна.";
Blockly.Msg["LOGIC_NEGATE_TYPEBLOCK"] = "not";  // untranslated
Blockly.Msg["LOGIC_NULL"] = "ничто";
Blockly.Msg["LOGIC_NULL_HELPURL"] = "https://en.wikipedia.org/wiki/Nullable_type";
Blockly.Msg["LOGIC_NULL_TOOLTIP"] = "Возвращает ничто.";
Blockly.Msg["LOGIC_NULL_TYPEBLOCK"] = "Null";  // untranslated
Blockly.Msg["LOGIC_OPERATION_AND"] = "и";
Blockly.Msg["LOGIC_OPERATION_AND_TYPEBLOCK"] = "and";  // untranslated
Blockly.Msg["LOGIC_OPERATION_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
Blockly.Msg["LOGIC_OPERATION_OR"] = "или";
Blockly.Msg["LOGIC_OPERATION_OR_TYPEBLOCK"] = "or";  // untranslated
Blockly.Msg["LOGIC_OPERATION_TOOLTIP_AND"] = "Возвращает значение истина, если обе вставки истинны.";
Blockly.Msg["LOGIC_OPERATION_TOOLTIP_OR"] = "Возвращает значение истина, если хотя бы одна из вставок истинна.";
Blockly.Msg["LOGIC_TERNARY_CONDITION"] = "выбрать по";
Blockly.Msg["LOGIC_TERNARY_HELPURL"] = "https://ru.wikipedia.org/wiki/Тернарная_условная_операция";
Blockly.Msg["LOGIC_TERNARY_IF_FALSE"] = "если ложь";
Blockly.Msg["LOGIC_TERNARY_IF_TRUE"] = "если истина";
Blockly.Msg["LOGIC_TERNARY_TOOLTIP"] = "Проверяет условие выбора. Если условие истинно, возвращает первое значение, в противном случае возвращает второе значение.";
Blockly.Msg["LOGIC_TERNARY_TYPEBLOCK"] = "Test";  // untranslated
Blockly.Msg["LOGIC_THIS"] = "This";  // untranslated
Blockly.Msg["LOGIC_THIS_TYPEBLOCK"] = "This";  // untranslated
Blockly.Msg["MAPS_CREATE_EMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Maps#create-empty-Map";  // untranslated
Blockly.Msg["MAPS_CREATE_EMPTY_TITLE"] = "create empty map";  // untranslated
Blockly.Msg["MAPS_CREATE_EMPTY_TOOLTIP"] = "Returns a Map, of length 0, containing no data records";  // untranslated
Blockly.Msg["MAPS_CREATE_EMPTY_TYPEBLOCK"] = "Create Empty Map";  // untranslated
Blockly.Msg["MAPS_CREATE_HELPURL"] = "https://github.com/google/blockly/wiki/Maps#create-empty-Map";  // untranslated
Blockly.Msg["MAPS_CREATE_TITLE"] = "map key %1 as %2";  // untranslated
Blockly.Msg["MAPS_CREATE_TOOLTIP"] = "Returns a Map, of length 0, containing no data records";  // untranslated
Blockly.Msg["MAPS_CREATE_TYPEBLOCK"] = "Map Key";  // untranslated
Blockly.Msg["MAPS_CREATE_WITH_CONTAINER_TITLE_ADD"] = "Map";  // untranslated
Blockly.Msg["MAPS_CREATE_WITH_CONTAINER_TOOLTIP"] = "Add, remove, or reorder sections to reconfigure this Map block.";  // untranslated
Blockly.Msg["MAPS_CREATE_WITH_HELPURL"] = "https://github.com/google/blockly/wiki/Maps#create-Map-with";  // untranslated
Blockly.Msg["MAPS_CREATE_WITH_INPUT_WITH"] = "create map with";  // untranslated
Blockly.Msg["MAPS_CREATE_WITH_ITEM_TOOLTIP"] = "Add an item to the Map.";  // untranslated
Blockly.Msg["MAPS_CREATE_WITH_TOOLTIP"] = "Create a Map with any number of items.";  // untranslated
Blockly.Msg["MAPS_CREATE_WITH_TYPEBLOCK"] = "Create Map With";  // untranslated
Blockly.Msg["MAPS_GET_INDEX_FIRST"] = "first";  // untranslated
Blockly.Msg["MAPS_GET_INDEX_FROM_END"] = "# from end";  // untranslated
Blockly.Msg["MAPS_GET_INDEX_FROM_START"] = "#";  // untranslated
Blockly.Msg["MAPS_GET_INDEX_GET"] = "get";  // untranslated
Blockly.Msg["MAPS_GET_INDEX_GET_REMOVE"] = "get and remove";  // untranslated
Blockly.Msg["MAPS_GET_INDEX_GET_REMOVE_TYPEBLOCK"] = "Get and Remove Item From a Map";  // untranslated
Blockly.Msg["MAPS_GET_INDEX_GET_TYPEBLOCK"] = "Get Item From a Map";  // untranslated
Blockly.Msg["MAPS_GET_INDEX_LAST"] = "last";  // untranslated
Blockly.Msg["MAPS_GET_INDEX_REMOVE"] = "remove";  // untranslated
Blockly.Msg["MAPS_GET_INDEX_REMOVE_TYPEBLOCK"] = "Remove Item From a Map";  // untranslated
Blockly.Msg["MAPS_GET_INDEX_TAIL"] = "";  // untranslated
Blockly.Msg["MAPS_GET_INDEX_TOOLTIP_GET"] = "Returns the item at the specified position in a Map.";  // untranslated
Blockly.Msg["MAPS_GET_INDEX_TOOLTIP_GET_REMOVE"] = "Removes and returns the item at the specified position in a Map.";  // untranslated
Blockly.Msg["MAPS_GET_INDEX_TOOLTIP_REMOVE"] = "Removes the item at the specified position in a Map.";  // untranslated
Blockly.Msg["MAPS_INDEX_OF_FIRST"] = "find first occurrence of item";  // untranslated
Blockly.Msg["MAPS_INDEX_OF_FIRST_TYPEBLOCK"] = "Find First Occurrence Of Item";  // untranslated
Blockly.Msg["MAPS_INDEX_OF_HELPURL"] = "https://github.com/google/blockly/wiki/Maps#getting-items-from-a-Map";  // untranslated
Blockly.Msg["MAPS_INDEX_OF_LAST"] = "find last occurrence of item";  // untranslated
Blockly.Msg["MAPS_INDEX_OF_LAST_TYPEBLOCK"] = "Find Last Occurrence Of Item";  // untranslated
Blockly.Msg["MAPS_INDEX_OF_TOOLTIP"] = "Returns the index of the first/last occurrence of the item in the Map. Returns 0 if text is not found.";  // untranslated
Blockly.Msg["MAPS_INMAP"] = "in map";  // untranslated
Blockly.Msg["MAPS_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Maps#is-empty";  // untranslated
Blockly.Msg["MAPS_ISEMPTY_TITLE"] = "%1 is empty";  // untranslated
Blockly.Msg["MAPS_ISEMPTY_TOOLTIP"] = "Returns true if the Map is empty.";  // untranslated
Blockly.Msg["MAPS_ISEMPTY_TYPEBLOCK"] = "Is Map Empty?";  // untranslated
Blockly.Msg["MAPS_KEYS_TITLE"] = "get keys of %1";  // untranslated
Blockly.Msg["MAPS_KEYS_TYPEBLOCK"] = "Get Keys of Map";  // untranslated
Blockly.Msg["MAPS_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Maps#length-of";  // untranslated
Blockly.Msg["MAPS_LENGTH_TITLE"] = "size of %1";  // untranslated
Blockly.Msg["MAPS_LENGTH_TOOLTIP"] = "Returns the number of entries in a Map.";  // untranslated
Blockly.Msg["MAPS_LENGTH_TYPEBLOCK"] = "Size Of Map";  // untranslated
Blockly.Msg["MAPS_SET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Maps#in-Map--set";  // untranslated
Blockly.Msg["MAPS_SET_INDEX_INPUT_TO"] = "as";  // untranslated
Blockly.Msg["MAPS_SET_INDEX_INSERT"] = "insert at";  // untranslated
Blockly.Msg["MAPS_SET_INDEX_SET"] = "set";  // untranslated
Blockly.Msg["MAPS_SET_INDEX_TOOLTIP"] = "Sets the item at the specified position in a Map.";  // untranslated
Blockly.Msg["MAPS_SET_INDEX_TYPEBLOCK"] = "Set Item at Position in Map";  // untranslated
Blockly.Msg["MATH_ADDITION_SYMBOL"] = "+";  // untranslated
Blockly.Msg["MATH_ARITHMETIC_ADD_TYPEBLOCK"] = "+";  // untranslated
Blockly.Msg["MATH_ARITHMETIC_DIVIDE_TYPEBLOCK"] = "/";  // untranslated
Blockly.Msg["MATH_ARITHMETIC_HELPURL"] = "https://ru.wikipedia.org/wiki/Арифметика";
Blockly.Msg["MATH_ARITHMETIC_MINUS_TYPEBLOCK"] = "-";  // untranslated
Blockly.Msg["MATH_ARITHMETIC_MULTIPLY_TYPEBLOCK"] = "*";  // untranslated
Blockly.Msg["MATH_ARITHMETIC_POWER_TYPEBLOCK"] = "^";  // untranslated
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_ADD"] = "Возвращает сумму двух чисел.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_DIVIDE"] = "Возвращает частное от деления первого числа на второе.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_MINUS"] = "Возвращает разность двух чисел.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_MULTIPLY"] = "Возвращает произведение двух чисел.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_POWER"] = "Возвращает первое число, возведённое в степень второго числа.";
Blockly.Msg["MATH_CHANGE_HELPURL"] = "https://ru.wikipedia.org/wiki/%D0%98%D0%B4%D0%B8%D0%BE%D0%BC%D0%B0_%28%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5%29#.D0.98.D0.BD.D0.BA.D1.80.D0.B5.D0.BC.D0.B5.D0.BD.D1.82";
Blockly.Msg["MATH_CHANGE_TITLE"] = "увеличить %1 на %2";
Blockly.Msg["MATH_CHANGE_TOOLTIP"] = "Добавляет число к переменной '%1'.";
Blockly.Msg["MATH_CHANGE_TYPEBLOCK"] = "Change Variable By Amount";  // untranslated
Blockly.Msg["MATH_CONSTANT_E_TYPEBLOCK"] = "Constant E";  // untranslated
Blockly.Msg["MATH_CONSTANT_GOLDEN_RATIO_TYPEBLOCK"] = "Constant Golden Ratio (φ)";  // untranslated
Blockly.Msg["MATH_CONSTANT_HELPURL"] = "https://ru.wikipedia.org/wiki/Математическая_константа";
Blockly.Msg["MATH_CONSTANT_INFINITY_TYPEBLOCK"] = "Constant Infinity (∞)";  // untranslated
Blockly.Msg["MATH_CONSTANT_PI_TYPEBLOCK"] = "Constant PI";  // untranslated
Blockly.Msg["MATH_CONSTANT_SQRT1_2_TYPEBLOCK"] = "Constant √ 1/2";  // untranslated
Blockly.Msg["MATH_CONSTANT_SQRT2_TYPEBLOCK"] = "Constant √ 2";  // untranslated
Blockly.Msg["MATH_CONSTANT_TOOLTIP"] = "Возвращает одну из распространённых  констант: π (3.141...), e (2.718...), φ (1.618...), sqrt(2) (1.414...), sqrt(½) (0.707...) или ∞ (бесконечность).";
Blockly.Msg["MATH_CONSTRAIN_HELPURL"] = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";  // untranslated
Blockly.Msg["MATH_CONSTRAIN_TITLE"] = "ограничить %1 снизу %2 сверху %3";
Blockly.Msg["MATH_CONSTRAIN_TOOLTIP"] = "Ограничивает число нижней и верхней границами (включительно).";
Blockly.Msg["MATH_CONSTRAIN_TYPEBLOCK"] = "Constrain Number Low High";  // untranslated
Blockly.Msg["MATH_DIVISION_SYMBOL"] = "÷";  // untranslated
Blockly.Msg["MATH_FORMAT_AS_DECIMAL_TITLE"] = "format as decimal  number %1 places %2";  // untranslated
Blockly.Msg["MATH_FORMAT_AS_DECIMAL_TOOLTIP"] = "Format this number";  // untranslated
Blockly.Msg["MATH_FORMAT_AS_DECIMAL_TYPEBLOCK"] = "Format as Decimal";  // untranslated
Blockly.Msg["MATH_IS_DIVISIBLE_BY"] = "делится на";
Blockly.Msg["MATH_IS_DIVISIBLE_BY_TYPEBLOCK"] = "Number Is Divisible By";  // untranslated
Blockly.Msg["MATH_IS_EVEN"] = "чётное";
Blockly.Msg["MATH_IS_EVEN_TYPEBLOCK"] = "Number Is Even";  // untranslated
Blockly.Msg["MATH_IS_NEGATIVE"] = "отрицательное";
Blockly.Msg["MATH_IS_NEGATIVE_TYPEBLOCK"] = "Number Is Negative";  // untranslated
Blockly.Msg["MATH_IS_ODD"] = "нечётное";
Blockly.Msg["MATH_IS_ODD_TYPEBLOCK"] = "Number Is Odd";  // untranslated
Blockly.Msg["MATH_IS_POSITIVE"] = "положительное";
Blockly.Msg["MATH_IS_POSITIVE_TYPEBLOCK"] = "Number Is Positive";  // untranslated
Blockly.Msg["MATH_IS_PRIME"] = "простое";
Blockly.Msg["MATH_IS_PRIME_TYPEBLOCK"] = "Number Is Prime";  // untranslated
Blockly.Msg["MATH_IS_TOOLTIP"] = "Проверяет, является ли число чётным, нечётным, простым, целым, положительным, отрицательным или оно кратно определённому числу.  Возвращает значение истина или ложь.";
Blockly.Msg["MATH_IS_WHOLE"] = "целое";
Blockly.Msg["MATH_IS_WHOLE_TYPEBLOCK"] = "Number Is Whole";  // untranslated
Blockly.Msg["MATH_MODULO_HELPURL"] = "https://ru.wikipedia.org/wiki/Деление_с_остатком";
Blockly.Msg["MATH_MODULO_TITLE"] = "остаток от %1 : %2";
Blockly.Msg["MATH_MODULO_TOOLTIP"] = "Возвращает остаток от деления двух чисел.";
Blockly.Msg["MATH_MODULO_TYPEBLOCK"] = "Remainder of";  // untranslated
Blockly.Msg["MATH_MULTIPLICATION_SYMBOL"] = "×";  // untranslated
Blockly.Msg["MATH_NUMBER_HELPURL"] = "https://ru.wikipedia.org/wiki/Число";
Blockly.Msg["MATH_NUMBER_TOOLTIP"] = "Число.";
Blockly.Msg["MATH_ONLIST_AVERAGE_TYPEBLOCK"] = "Average of List";  // untranslated
Blockly.Msg["MATH_ONLIST_HELPURL"] = "";  // untranslated
Blockly.Msg["MATH_ONLIST_MAX_TYPEBLOCK"] = "Max of List";  // untranslated
Blockly.Msg["MATH_ONLIST_MEDIAN_TYPEBLOCK"] = "Median of List";  // untranslated
Blockly.Msg["MATH_ONLIST_MIN_TYPEBLOCK"] = "Min of List";  // untranslated
Blockly.Msg["MATH_ONLIST_MODE_TYPEBLOCK"] = "Mode of List";  // untranslated
Blockly.Msg["MATH_ONLIST_OPERATOR_AVERAGE"] = "среднее арифметическое списка";
Blockly.Msg["MATH_ONLIST_OPERATOR_MAX"] = "наибольшее в списке";
Blockly.Msg["MATH_ONLIST_OPERATOR_MEDIAN"] = "медиана списка";
Blockly.Msg["MATH_ONLIST_OPERATOR_MIN"] = "наименьшее в списке";
Blockly.Msg["MATH_ONLIST_OPERATOR_MODE"] = "моды списка";
Blockly.Msg["MATH_ONLIST_OPERATOR_RANDOM"] = "случайный элемент списка";
Blockly.Msg["MATH_ONLIST_OPERATOR_STD_DEV"] = "стандартное отклонение списка";
Blockly.Msg["MATH_ONLIST_OPERATOR_SUM"] = "сумма списка";
Blockly.Msg["MATH_ONLIST_RANDOM_TYPEBLOCK"] = "Random Item of List";  // untranslated
Blockly.Msg["MATH_ONLIST_STD_DEV_TYPEBLOCK"] = "Standard Deviation of List";  // untranslated
Blockly.Msg["MATH_ONLIST_SUM_TYPEBLOCK"] = "Sum of List";  // untranslated
Blockly.Msg["MATH_ONLIST_TOOLTIP_AVERAGE"] = "Возвращает среднее арифметическое списка.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MAX"] = "Возвращает наибольшее число списка.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MEDIAN"] = "Возвращает медиану списка.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MIN"] = "Возвращает наименьшее число списка.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MODE"] = "Возвращает список наиболее часто встречающихся элементов списка.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_RANDOM"] = "Возвращает случайный элемент списка.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_STD_DEV"] = "Возвращает стандартное отклонение списка.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_SUM"] = "Возвращает сумму всех чисел в списке.";
Blockly.Msg["MATH_POWER_SYMBOL"] = "^";  // untranslated
Blockly.Msg["MATH_RANDOM_FLOAT_HELPURL"] = "https://ru.wikipedia.org/wiki/Генератор_псевдослучайных_чисел";
Blockly.Msg["MATH_RANDOM_FLOAT_TITLE_RANDOM"] = "случайное число от 0 (включительно) до 1";
Blockly.Msg["MATH_RANDOM_FLOAT_TOOLTIP"] = "Возвращает случайное число от 0.0 (включительно) до 1.0.";
Blockly.Msg["MATH_RANDOM_FLOAT_TYPEBLOCK"] = "Random Fraction";  // untranslated
Blockly.Msg["MATH_RANDOM_INT_HELPURL"] = "https://ru.wikipedia.org/wiki/Генератор_псевдослучайных_чисел";
Blockly.Msg["MATH_RANDOM_INT_TITLE"] = "случайное целое число от %1 для %2";
Blockly.Msg["MATH_RANDOM_INT_TOOLTIP"] = "Возвращает случайное число между двумя заданными пределами (включая и их).";
Blockly.Msg["MATH_RANDOM_INT_TYPEBLOCK"] = "Random Integer";  // untranslated
Blockly.Msg["MATH_ROUND_HELPURL"] = "https://ru.wikipedia.org/wiki/Округление";
Blockly.Msg["MATH_ROUND_OPERATOR_ROUND"] = "округлить";
Blockly.Msg["MATH_ROUND_OPERATOR_ROUNDDOWN"] = "округлить к меньшему";
Blockly.Msg["MATH_ROUND_OPERATOR_ROUNDUP"] = "округлить к большему";
Blockly.Msg["MATH_ROUND_ROUNDDOWN_TYPEBLOCK"] = "Round Down";  // untranslated
Blockly.Msg["MATH_ROUND_ROUNDUP_TYPEBLOCK"] = "Round Up";  // untranslated
Blockly.Msg["MATH_ROUND_ROUND_TYPEBLOCK"] = "Round";  // untranslated
Blockly.Msg["MATH_ROUND_TOOLTIP"] = "Округляет число до большего или меньшего.";
Blockly.Msg["MATH_SINGLE_HELPURL"] = "https://ru.wikipedia.org/wiki/Квадратный_корень";
Blockly.Msg["MATH_SINGLE_OP_ABSOLUTE"] = "модуль";
Blockly.Msg["MATH_SINGLE_OP_ABSOLUTE_TYPEBLOCK"] = "Absolute Value";  // untranslated
Blockly.Msg["MATH_SINGLE_OP_NEG_TYPEBLOCK"] = "Negation";  // untranslated
Blockly.Msg["MATH_SINGLE_OP_ROOT"] = "квадратный корень";
Blockly.Msg["MATH_SINGLE_OP_ROOT_TYPEBLOCK"] = "Square Root";  // untranslated
Blockly.Msg["MATH_SINGLE_TOOLTIP_ABS"] = "Возвращает модуль числа";
Blockly.Msg["MATH_SINGLE_TOOLTIP_EXP"] = "Возвращает е в указанной степени.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_LN"] = "Возвращает натуральный логарифм числа.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_LOG10"] = "Возвращает десятичный логарифм числа.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_NEG"] = "Возвращает противоположное число.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_POW10"] = "Возвращает 10 в указанной степени.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_ROOT"] = "Возвращает квадратный корень числа.";
Blockly.Msg["MATH_SUBTRACTION_SYMBOL"] = "-";  // untranslated
Blockly.Msg["MATH_TRIG_ACOS"] = "acos";  // untranslated
Blockly.Msg["MATH_TRIG_ACOS_TYPEBLOCK"] = "ACOS";  // untranslated
Blockly.Msg["MATH_TRIG_ASIN"] = "asin";  // untranslated
Blockly.Msg["MATH_TRIG_ASIN_TYPEBLOCK"] = "ASIN";  // untranslated
Blockly.Msg["MATH_TRIG_ATAN"] = "atan";  // untranslated
Blockly.Msg["MATH_TRIG_ATAN_TYPEBLOCK"] = "ATAN";  // untranslated
Blockly.Msg["MATH_TRIG_COS"] = "cos";  // untranslated
Blockly.Msg["MATH_TRIG_COS_TYPEBLOCK"] = "COS";  // untranslated
Blockly.Msg["MATH_TRIG_HELPURL"] = "https://ru.wikipedia.org/wiki/Тригонометрические_функции";
Blockly.Msg["MATH_TRIG_SIN"] = "sin";  // untranslated
Blockly.Msg["MATH_TRIG_SIN_TYPEBLOCK"] = "SIN";  // untranslated
Blockly.Msg["MATH_TRIG_TAN"] = "tan";  // untranslated
Blockly.Msg["MATH_TRIG_TAN_TYPEBLOCK"] = "TAN";  // untranslated
Blockly.Msg["MATH_TRIG_TOOLTIP_ACOS"] = "Возвращает арккосинус (в градусах).";
Blockly.Msg["MATH_TRIG_TOOLTIP_ASIN"] = "Возвращает арксинус (в градусах).";
Blockly.Msg["MATH_TRIG_TOOLTIP_ATAN"] = "Возвращает арктангенс (в градусах)";
Blockly.Msg["MATH_TRIG_TOOLTIP_COS"] = "Возвращает косинус угла в градусах.";
Blockly.Msg["MATH_TRIG_TOOLTIP_SIN"] = "Возвращает синус угла в градусах.";
Blockly.Msg["MATH_TRIG_TOOLTIP_TAN"] = "Возвращает тангенс угла в градусах.";
Blockly.Msg["ME"] = "Мне";
Blockly.Msg["NEW_SCOPE_VARIABLE"] = "New Key...";  // untranslated
Blockly.Msg["NEW_SCOPE_VARIABLE_TITLE"] = "New Key name:";  // untranslated
Blockly.Msg["NEW_VARIABLE"] = "Новая переменная…";
Blockly.Msg["NEW_VARIABLE_TITLE"] = "Имя новой переменной:";
Blockly.Msg["ORDINAL_NUMBER_SUFFIX"] = "";  // untranslated
Blockly.Msg["PROCEDURES_ALLOW_STATEMENTS"] = "разрешить операторы";
Blockly.Msg["PROCEDURES_BEFORE_PARAMS"] = "с:";
Blockly.Msg["PROCEDURES_CALLNORETURN_CALL"] = "";  // untranslated
Blockly.Msg["PROCEDURES_CALLNORETURN_HELPURL"] = "https://ru.wikipedia.org/wiki/Функция_%28программирование%29";
Blockly.Msg["PROCEDURES_CALLNORETURN_TOOLTIP"] = "Исполняет определённую пользователем процедуру '%1'.";
Blockly.Msg["PROCEDURES_CALLRETURN_HELPURL"] = "https://ru.wikipedia.org/wiki/Функция_%28программирование%29";
Blockly.Msg["PROCEDURES_CALLRETURN_TOOLTIP"] = "Исполняет определённую пользователем процедуру '%1' и возвращает вычисленное  значение.";
Blockly.Msg["PROCEDURES_CALL_BEFORE_PARAMS"] = "с:";
Blockly.Msg["PROCEDURES_CREATE_DO"] = "Создать вызов '%1'";
Blockly.Msg["PROCEDURES_DEFFUNCTIONNORETURN_TITLE"] = "Function";  // untranslated
Blockly.Msg["PROCEDURES_DEFNORETURN_DO"] = "";  // untranslated
Blockly.Msg["PROCEDURES_DEFNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg["PROCEDURES_DEFNORETURN_PROCEDURE"] = "выполнить что-то";
Blockly.Msg["PROCEDURES_DEFNORETURN_TITLE"] = "чтобы";
Blockly.Msg["PROCEDURES_DEFNORETURN_TOOLTIP"] = "Создаёт процедуру, не возвращающую значение.";
Blockly.Msg["PROCEDURES_DEFRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg["PROCEDURES_DEFRETURN_RETURN"] = "вернуть";
Blockly.Msg["PROCEDURES_DEFRETURN_TOOLTIP"] = "Создаёт процедуру, возвращающую значение.";
Blockly.Msg["PROCEDURES_DEF_DUPLICATE_WARNING"] = "Предупреждение: эта функция имеет повторяющиеся параметры.";
Blockly.Msg["PROCEDURES_HIGHLIGHT_DEF"] = "Выделить определение процедуры";
Blockly.Msg["PROCEDURES_IFRETURN_TOOLTIP"] = "Если первое значение истинно, возвращает второе значение.";
Blockly.Msg["PROCEDURES_IFRETURN_WARNING"] = "Предупреждение: Этот блок может использоваться только внутри определения функции.";
Blockly.Msg["PROCEDURES_MUTATORARG_TITLE"] = "имя параметра:";
Blockly.Msg["PROCEDURES_MUTATORARG_TOOLTIP"] = "Добавить входной параметр в функцию.";
Blockly.Msg["PROCEDURES_MUTATORCONTAINER_TITLE"] = "параметры";
Blockly.Msg["PROCEDURES_MUTATORCONTAINER_TOOLTIP"] = "Добавить, удалить или изменить порядок входных параметров для этой функции.";
Blockly.Msg["PROCEDURES_NEWTYPE"] = "New Type...";  // untranslated
Blockly.Msg["PROCEDURES_NEWTYPETITLE"] = "New Type name:";  // untranslated
Blockly.Msg["PROCEDURES_PARAM_NOTYPE"] = "with %1 %2%3";  // untranslated
Blockly.Msg["PROCEDURES_PARAM_WITH_TYPE"] = "with %1 as %2%3%4";  // untranslated
Blockly.Msg["REMOVE_COMMENT"] = "Удалить комментарий";
Blockly.Msg["RENAME_SCOPE_VARIABLE"] = "Rename Key...";  // untranslated
Blockly.Msg["RENAME_SCOPE_VARIABLE_TITLE"] = "Rename all '%1' Keys to:";  // untranslated
Blockly.Msg["RENAME_VARIABLE"] = "Переименовать переменную…";
Blockly.Msg["RENAME_VARIABLE_TITLE"] = "Переименовать все переменные '%1' в:";
Blockly.Msg["SCOPE_VARIABLES_SET"] = "set %1 : %2 to %3";  // untranslated
Blockly.Msg["TEXT_APPEND_APPENDTEXT"] = "добавить текст";
Blockly.Msg["TEXT_APPEND_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg["TEXT_APPEND_TO"] = "к";
Blockly.Msg["TEXT_APPEND_TOOLTIP"] = "Добавить текст к переменной «%1».";
Blockly.Msg["TEXT_APPEND_TYPEBLOCK"] = "Append Text";  // untranslated
Blockly.Msg["TEXT_CHANGECASE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
Blockly.Msg["TEXT_CHANGECASE_LOWERCASE_TYPBLOCK"] = "Text to lower case";  // untranslated
Blockly.Msg["TEXT_CHANGECASE_OPERATOR_LOWERCASE"] = "в строчные буквы";
Blockly.Msg["TEXT_CHANGECASE_OPERATOR_TITLECASE"] = "в Заглавные Начальные Буквы";
Blockly.Msg["TEXT_CHANGECASE_OPERATOR_UPPERCASE"] = "в ЗАГЛАВНЫЕ БУКВЫ";
Blockly.Msg["TEXT_CHANGECASE_TITLECASE_TYPBLOCK"] = "Text to Title Case";  // untranslated
Blockly.Msg["TEXT_CHANGECASE_TOOLTIP"] = "Возвращает копию текста с ЗАГЛАВНЫМИ или строчными буквами.";
Blockly.Msg["TEXT_CHANGECASE_UPPERCASE_TYPBLOCK"] = "Text to UPPER CASE";  // untranslated
Blockly.Msg["TEXT_CHARAT_FIRST"] = "взять первую букву";
Blockly.Msg["TEXT_CHARAT_FROM_END"] = "взять букву № с конца";
Blockly.Msg["TEXT_CHARAT_FROM_START"] = "взять букву №";
Blockly.Msg["TEXT_CHARAT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
Blockly.Msg["TEXT_CHARAT_INPUT_INTEXT"] = "в тексте";
Blockly.Msg["TEXT_CHARAT_LAST"] = "взять последнюю букву";
Blockly.Msg["TEXT_CHARAT_RANDOM"] = "взять случайную букву";
Blockly.Msg["TEXT_CHARAT_TAIL"] = "";  // untranslated
Blockly.Msg["TEXT_CHARAT_TOOLTIP"] = "Возвращает букву в указанной позиции.";
Blockly.Msg["TEXT_COMMENT_TEXT"] = "Comment:";  // untranslated
Blockly.Msg["TEXT_COMMENT_TYPEBLOCK"] = "Comment";  // untranslated
Blockly.Msg["TEXT_CONTAINS_HELPURL"] = "http://appinventor.mit.edu/explore/ai2/support/blocks/text#contains";  // untranslated
Blockly.Msg["TEXT_CONTAINS_INPUT"] = "contains text %1 piece %2";  // untranslated
Blockly.Msg["TEXT_CONTAINS_TOOLTIP"] = "Tests whether the piece is contained in the text.";  // untranslated
Blockly.Msg["TEXT_CONTAINS_TYPEBLOCK"] = "Text Contains";  // untranslated
Blockly.Msg["TEXT_CREATE_JOIN_ITEM_TOOLTIP"] = "Добавить элемент к тексту.";
Blockly.Msg["TEXT_CREATE_JOIN_TITLE_JOIN"] = "соединить";
Blockly.Msg["TEXT_CREATE_JOIN_TOOLTIP"] = "Добавьте, удалите, переставьте фрагменты для переделки текстового блока.";
Blockly.Msg["TEXT_GET_SUBSTRING_END_FROM_END"] = "по букву № с конца";
Blockly.Msg["TEXT_GET_SUBSTRING_END_FROM_END_TYPEBLOCK"] = " To Letter # From End";  // untranslated
Blockly.Msg["TEXT_GET_SUBSTRING_END_FROM_START"] = "по букву №";
Blockly.Msg["TEXT_GET_SUBSTRING_END_FROM_START_TYPEBLOCK"] = " To Letter #";  // untranslated
Blockly.Msg["TEXT_GET_SUBSTRING_END_LAST"] = "по последнюю букву";
Blockly.Msg["TEXT_GET_SUBSTRING_END_LAST_TYPEBLOCK"] = " To Last Letter";  // untranslated
Blockly.Msg["TEXT_GET_SUBSTRING_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
Blockly.Msg["TEXT_GET_SUBSTRING_INPUT_IN_TEXT"] = "в тексте";
Blockly.Msg["TEXT_GET_SUBSTRING_START_FIRST"] = "взять подстроку с первой буквы";
Blockly.Msg["TEXT_GET_SUBSTRING_START_FIRST_TYPEBLOCK"] = "Get Substring From First Letter";  // untranslated
Blockly.Msg["TEXT_GET_SUBSTRING_START_FROM_END"] = "взять подстроку с буквы № с конца";
Blockly.Msg["TEXT_GET_SUBSTRING_START_FROM_END_TYPEBLOCK"] = "Get Substring From Letter # From End";  // untranslated
Blockly.Msg["TEXT_GET_SUBSTRING_START_FROM_START"] = "взять подстроку с буквы №";
Blockly.Msg["TEXT_GET_SUBSTRING_START_FROM_START_TYPEBLOCK"] = "Get Substring From Letter #";  // untranslated
Blockly.Msg["TEXT_GET_SUBSTRING_TAIL"] = "";  // untranslated
Blockly.Msg["TEXT_GET_SUBSTRING_TOOLTIP"] = "Возвращает указанную часть текста.";
Blockly.Msg["TEXT_INDEXOF_FIRST_TYPEBLOCK"] = "Find First Occurrence of Text";  // untranslated
Blockly.Msg["TEXT_INDEXOF_HELPURL"] = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
Blockly.Msg["TEXT_INDEXOF_INPUT_INTEXT"] = "в тексте";
Blockly.Msg["TEXT_INDEXOF_LAST_TYPEBLOCK"] = "Find Last Occurrence of Text";  // untranslated
Blockly.Msg["TEXT_INDEXOF_OPERATOR_FIRST"] = "найти первое вхождение текста";
Blockly.Msg["TEXT_INDEXOF_OPERATOR_LAST"] = "найти последнее вхождение текста";
Blockly.Msg["TEXT_INDEXOF_TAIL"] = "";  // untranslated
Blockly.Msg["TEXT_INDEXOF_TOOLTIP"] = "Возвращает номер позиции первого/последнего вхождения первого текста во  втором.  Возвращает 0, если текст не найден.";
Blockly.Msg["TEXT_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
Blockly.Msg["TEXT_ISEMPTY_TITLE"] = "%1 пуст";
Blockly.Msg["TEXT_ISEMPTY_TOOLTIP"] = "Возвращает значение истина, если предоставленный текст пуст.";
Blockly.Msg["TEXT_ISEMPTY_TYPEBLOCK"] = "Text is Empty";  // untranslated
Blockly.Msg["TEXT_JOIN_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
Blockly.Msg["TEXT_JOIN_TITLE_CREATEWITH"] = "создать текст из";
Blockly.Msg["TEXT_JOIN_TOOLTIP"] = "Создаёт фрагмент текста, объединяя любое число элементов";
Blockly.Msg["TEXT_JOIN_TYPEBLOCK"] = "Create Text With";  // untranslated
Blockly.Msg["TEXT_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg["TEXT_LENGTH_TITLE"] = "длина %1";
Blockly.Msg["TEXT_LENGTH_TOOLTIP"] = "Возвращает число символов (включая пробелы) в заданном тексте.";
Blockly.Msg["TEXT_LENGTH_TYPEBLOCK"] = "Length of Text";  // untranslated
Blockly.Msg["TEXT_PRINTF_CREATEWITH"] = "create text with";  // untranslated
Blockly.Msg["TEXT_PRINTF_HELPURL"] = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg["TEXT_PRINTF_TITLE"] = "printf format %1";  // untranslated
Blockly.Msg["TEXT_PRINTF_TOOLTIP"] = "Printf the specified text, number or other value.";  // untranslated
Blockly.Msg["TEXT_PRINTF_TYPEBLOCK"] = "Printf Text";  // untranslated
Blockly.Msg["TEXT_PRINT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg["TEXT_PRINT_TITLE"] = "напечатать %1";
Blockly.Msg["TEXT_PRINT_TOOLTIP"] = "Печатает текст, число или другой объект.";
Blockly.Msg["TEXT_PRINT_TYPEBLOCK"] = "Print Text";  // untranslated
Blockly.Msg["TEXT_PROMPT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
Blockly.Msg["TEXT_PROMPT_NUMBER_TYPEBLOCK"] = "Prompt For Number With Message";  // untranslated
Blockly.Msg["TEXT_PROMPT_TEXT_TYPEBLOCK"] = "Prompt For Text With Message";  // untranslated
Blockly.Msg["TEXT_PROMPT_TOOLTIP_NUMBER"] = "Запросить у пользователя число.";
Blockly.Msg["TEXT_PROMPT_TOOLTIP_TEXT"] = "Запросить у пользователя текст.";
Blockly.Msg["TEXT_PROMPT_TYPE_NUMBER"] = "запросить число с подсказкой";
Blockly.Msg["TEXT_PROMPT_TYPE_TEXT"] = "запросить текст с подсказкой";
Blockly.Msg["TEXT_SPRINTF_CREATEWITH"] = "create text with";  // untranslated
Blockly.Msg["TEXT_SPRINTF_HELPURL"] = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg["TEXT_SPRINTF_TITLE"] = "sprintf format %1";  // untranslated
Blockly.Msg["TEXT_SPRINTF_TOOLTIP"] = "Sprintf the specified text, number or other value.";  // untranslated
Blockly.Msg["TEXT_SPRINTF_TYPEBLOCK"] = "Sprintf Text";  // untranslated
Blockly.Msg["TEXT_TEXT_HELPURL"] = "https://ru.wikipedia.org/wiki/Строковый_тип";
Blockly.Msg["TEXT_TEXT_TOOLTIP"] = "Буква, слово или строка текста.";
Blockly.Msg["TEXT_TOOLTIP_TYPE_JAVA"] = "Insert arbitrary Java code";  // untranslated
Blockly.Msg["TEXT_TOOLTIP_TYPE_PYTHON"] = "Insert arbitrary Python code";  // untranslated
Blockly.Msg["TEXT_TRIM_BOTH_TYPEBLOCK"] = "Trim Spaces From Both Sides Of Text";  // untranslated
Blockly.Msg["TEXT_TRIM_HELPURL"] = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
Blockly.Msg["TEXT_TRIM_LEFT_TYPEBLOCK"] = "Trim Spaces From Left Side Of Text";  // untranslated
Blockly.Msg["TEXT_TRIM_OPERATOR_BOTH"] = "обрезать пробелы с двух сторон";
Blockly.Msg["TEXT_TRIM_OPERATOR_LEFT"] = "обрезать пробелы слева";
Blockly.Msg["TEXT_TRIM_OPERATOR_RIGHT"] = "обрезать пробелы справа";
Blockly.Msg["TEXT_TRIM_RIGHT_TYPEBLOCK"] = "Trim Spaces From Right Side Of Text";  // untranslated
Blockly.Msg["TEXT_TRIM_TOOLTIP"] = "Возвращает копию текста с пробелами, удалеными с одного или обоих концов.";
Blockly.Msg["TEXT_TYPE_JAVA"] = "insert java code";  // untranslated
Blockly.Msg["TEXT_TYPE_JAVA_TYPEBLOCK"] = "insert java code";  // untranslated
Blockly.Msg["TEXT_TYPE_PYTHON"] = "insert python code";  // untranslated
Blockly.Msg["TEXT_TYPE_PYTHON_TYPEBLOCK"] = "insert python code";  // untranslated
Blockly.Msg["TODAY"] = "Сегодня";
Blockly.Msg["VARIABLES_DEFAULT_NAME"] = "элемент";
Blockly.Msg["VARIABLES_GET_CREATE_SET"] = "Создать блок \"присвоить\" для %1";
Blockly.Msg["VARIABLES_GET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
Blockly.Msg["VARIABLES_GET_TOOLTIP"] = "Возвращает значение этой переменной.";
Blockly.Msg["VARIABLES_SET"] = "присвоить %1 = %2";
Blockly.Msg["VARIABLES_SET_CREATE_GET"] = "Создать вставку %1";
Blockly.Msg["VARIABLES_SET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg["VARIABLES_SET_TOOLTIP"] = "Присваивает переменной значение вставки.";
Blockly.Msg["CONTROLS_FOREACH_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["CONTROLS_FOR_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["CONTROLS_IF_ELSEIF_TITLE_ELSEIF"] = Blockly.Msg["CONTROLS_IF_MSG_ELSEIF"];
Blockly.Msg["CONTROLS_IF_ELSE_TITLE_ELSE"] = Blockly.Msg["CONTROLS_IF_MSG_ELSE"];
Blockly.Msg["CONTROLS_IF_IF_TITLE_IF"] = Blockly.Msg["CONTROLS_IF_MSG_IF"];
Blockly.Msg["CONTROLS_IF_MSG_THEN"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["CONTROLS_WHILEUNTIL_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["LISTS_CREATE_WITH_ITEM_TITLE"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
Blockly.Msg["LISTS_GET_INDEX_HELPURL"] = Blockly.Msg["LISTS_INDEX_OF_HELPURL"];
Blockly.Msg["LISTS_GET_INDEX_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["LISTS_GET_SUBLIST_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["LISTS_INDEX_OF_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["LISTS_SET_INDEX_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["MAPS_CREATE_WITH_ITEM_TITLE"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
Blockly.Msg["MAPS_GET_INDEX_HELPURL"] = Blockly.Msg["MAPS_INDEX_OF_HELPURL"];
Blockly.Msg["MAPS_GET_INDEX_INPUT_IN_MAP"] = Blockly.Msg["MAPS_INMAP"];
Blockly.Msg["MAPS_INDEX_OF_INPUT_IN_MAP"] = Blockly.Msg["MAPS_INMAP"];
Blockly.Msg["MAPS_SET_INDEX_INPUT_IN_MAP"] = Blockly.Msg["MAPS_INMAP"];
Blockly.Msg["MATH_CHANGE_TITLE_ITEM"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
Blockly.Msg["PROCEDURES_CALLRETURN_CALL"] = Blockly.Msg["PROCEDURES_CALLNORETURN_CALL"];
Blockly.Msg["PROCEDURES_DEFRETURN_DO"] = Blockly.Msg["PROCEDURES_DEFNORETURN_DO"];
Blockly.Msg["PROCEDURES_DEFRETURN_PROCEDURE"] = Blockly.Msg["PROCEDURES_DEFNORETURN_PROCEDURE"];
Blockly.Msg["PROCEDURES_DEFRETURN_TITLE"] = Blockly.Msg["PROCEDURES_DEFNORETURN_TITLE"];
Blockly.Msg["TEXT_APPEND_VARIABLE"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
Blockly.Msg["TEXT_CREATE_JOIN_ITEM_TITLE_ITEM"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
